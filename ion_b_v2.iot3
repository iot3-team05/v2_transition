iot3: 2.0.0
info:
  name: Commscope Ion B
  oem: Commscope
  model: Ion B
  versions:
    - "4.1"
    - "5.3"
  description: Commscope Ion B Full File
  author: bhagyashree.bothra@qeleo.com
  stage: alpha
  revision: 2
  labels:
    - calls say Ion M but it's actually Ion B
    - auto upgraded to v2
  created: "2021-05-11"
  updated: "2022-12-07"
registration:
  vaultId: vault_id
  fingerprint:
    - ip
    - port
    - vault_id
  vault:
    properties:
      password:
        key: password
        placeholder: Password
        required: true
        title: Password
        type: string
      username:
        key: username
        placeholder: Username
        required: true
        title: Username
        type: string
    required:
      - username
      - password
  form:
    properties:
      ip:
        description: The IP address of the device.
        key: ip
        placeholder: IP Address
        required: true
        title: IP
        type: string
      port:
        description: The port number of the device.
        inputType: number
        key: port
        maximum: 65535
        minimum: 1
        placeholder: Port
        required: true
        title: Port
        type: number
      vault_id:
        key: vault_id
        pattern: ^(cu\w{6})(-av\w{6})$
        placeholder: Vault ID
        required: true
        title: Vault ID
        type: string
    required:
      - ip
      - port
      - vault_id
engines:
  tunnel:
    ssh:
      supported: false
    http:
      supported: true
  upgraded-http:
    schedule: '@always'
    auth: '%{resources.auths.upgraded-http}'
    type: HTTP
    options:
      tls:
        minVersion: "1.0"
topology:
  rootType: mc
  nodes: true
  discovery:
    dataEngine: '%{engines.upgraded-http}'
    dataSource: '%{resources.http.requests.get_tree}'
    type: http
    expression: {}
    selectors:
      nodes:
        dataEngine: '%{engines.upgraded-http}'
        selector:
          type: regexp
          expression: /((?<=['])(?!ION|Master).+(?=[']))/g
    flatten:
      type:
        transform: ${topology.discovery.selectors.nodes}
        filters:
          1: regexpExtract /^([A-Z]+)/ => $1
          2: |
            switch
            "%{1}" ~= "TSUN" : "tsun"
            "%{1}" ~= "TFAH" : "tfah"
            "%{1}" ~= "TFLN" : "tfln"
            "%{1}" ~= "TPRN" : "tprn"
            "%{1}" ~= "TPOI" : "tpoi"
            default: ""
      topology:
        transform: ${topology.discovery.selectors.nodes}
        filters:
          1: regexpExtract /(.+(?=[][,][]))/ => $1
          2: |
            switch
            "%{1}" ~= "TSUN.*" : "tsun"
            "%{1}" ~= "TFAH.*" : "tfah"
            "%{1}" ~= "TFLN.*" : "tfln"
            "%{1}" ~= "TPRN.*" : "tprn"
            "%{1}" ~= "TPOI.*" : "tpoi"
            default: ""
          3: use %{1}
          4: regexpExtract /(\d+$|\d+[.]\d+[.]\d+|\d+[.]\d+)/ => $1
          5: regexpExtract /^(\d+)/ => $1
          6: use %{4}
          7: regexpExtract /((?<=\.)\d+(?=\.))/ => $1
          8: use %{4}
          9: regexpExtract /(\d+)$/ => $1
          10: |
            switch
            "%{2}" == "tprn" : "'mc' -> 'tprn [%{5}]'"
            "%{2}" == "tfln" : "'mc' -> 'tprn [%{5}]' -> 'tfln [%{9}]'"
            "%{2}" == "tfah" : "'mc' -> 'tprn [%{5}]' -> 'tfln [%{7}]' -> 'tfah [%{9}]'"
            "%{2}" == "tsun" : "'mc' -> 'tprn [%{5}]' -> 'tsun [%{9}]'"
            "%{2}" == "tpoi" : "'mc' -> 'tprn [%{5}]' -> 'tpoi [%{9}]'"
            default: "mc"
      version:
        transform: "0.1"
      addr:
        transform: ${topology.discovery.selectors.nodes}
        filters:
          1: regexpExtract /((?<=addr[=])\d+(?=[&]))/ => $1
      gui_str:
        transform: ${topology.discovery.selectors.nodes}
        filters:
          1: regexpExtract /((?<=gui[_]str[=]).+(?=[&]))/ => $1
      unit_str:
        transform: ${topology.discovery.selectors.nodes}
        filters:
          1: regexpExtract /((?<=unit[_]str[=])[a-zA-Z0-9\.]*)/ => $1
types:
  mc:
    name: Master Controller
    version: '[5.30,)'
    reference: mc
    attributes:
      - mc_setting_unit_id
      - mc_setting_system_name
      - mc_setting_location
      - mc_setting_longitude
      - mc_setting_latitude
      - mc_overview_error_status
      - mc_overview_software_version
      - mc_overview_configuration_automatic_reboot
      - mc_overview_configuration_battery_backup
      - mc_overview_temperature_internal
      - mc_overview_temperature_external
      - mc_overview_temperature_alarm_threshold
      - general_rs485_bus_error_alarm
      - communication_error_add_1_alarm
      - communication_error_add_2_alarm
      - communication_error_add_3_alarm
      - communication_error_add_4_alarm
      - communication_error_add_5_alarm
      - communication_error_add_6_alarm
      - communication_error_add_7_alarm
      - communication_error_add_8_alarm
      - communication_error_add_9_alarm
      - communication_error_add_10_alarm
      - communication_error_add_11_alarm
      - communication_error_add_12_alarm
      - communication_error_add_13_alarm
      - communication_error_add_14_alarm
    alarms:
      communication_error_add_1_alarm:
        attributes:
          - communication_error_add_1_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      communication_error_add_2_alarm:
        attributes:
          - communication_error_add_2_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      communication_error_add_3_alarm:
        attributes:
          - communication_error_add_3_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      communication_error_add_4_alarm:
        attributes:
          - communication_error_add_4_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      communication_error_add_5_alarm:
        attributes:
          - communication_error_add_5_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      communication_error_add_6_alarm:
        attributes:
          - communication_error_add_6_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      communication_error_add_7_alarm:
        attributes:
          - communication_error_add_7_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      communication_error_add_8_alarm:
        attributes:
          - communication_error_add_8_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      communication_error_add_9_alarm:
        attributes:
          - communication_error_add_9_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      communication_error_add_10_alarm:
        attributes:
          - communication_error_add_10_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      communication_error_add_11_alarm:
        attributes:
          - communication_error_add_11_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      communication_error_add_12_alarm:
        attributes:
          - communication_error_add_12_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      communication_error_add_13_alarm:
        attributes:
          - communication_error_add_13_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      communication_error_add_14_alarm:
        attributes:
          - communication_error_add_14_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      general_rs485_bus_error_alarm:
        attributes:
          - general_rs485_bus_error_alarm
        mapper: '%{resources.mappers.alarm_severity}'
    price:
      value: 0
      unit: USD
    energy:
      value: 0
      unit: W
  tfah:
    name: TFAH
    version: '[0.1,)'
    reference: tfah
    attributes:
      - tfah_setting_unit_id
      - tfah_setting_system_name
      - tfah_setting_location
      - tfah_setting_longitude
      - tfah_setting_latitude
      - tfah_inventory_unit_id
      - tfah_inventory_module_type
      - tfah_inventory_id_number
      - tfah_inventory_serial_number
      - tfah_inventory_manufacturer
      - tfah_inventory_production_year
      - tfah_inventory_description
      - tfah_inventory_hardware_revision
      - tfah_inventory_software_id
      - tfah_inventory_software_version
      - dl_optical_power_fail_alarm
      - agc_out_of_range_alarm
      - dl_cell_850_band_alarm
      - external_1_alarm
      - external_2_alarm
      - tfah_power_supply_alarm
      - tfah_temperature_alarm
      - dl_pcs_1900_band_alarm
      - sensor_fail_alarm
    alarms:
      agc_out_of_range_alarm:
        attributes:
          - agc_out_of_range_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      dl_cell_850_band_alarm:
        attributes:
          - dl_cell_850_band_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      dl_optical_power_fail_alarm:
        attributes:
          - dl_optical_power_fail_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      dl_pcs_1900_band_alarm:
        attributes:
          - dl_pcs_1900_band_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      external_1_alarm:
        attributes:
          - external_1_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      external_2_alarm:
        attributes:
          - external_2_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      sensor_fail_alarm:
        attributes:
          - sensor_fail_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      tfah_power_supply_alarm:
        attributes:
          - tfah_power_supply_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      tfah_temperature_alarm:
        attributes:
          - tfah_temperature_alarm
        mapper: '%{resources.mappers.alarm_severity}'
    price:
      value: 0
      unit: USD
    energy:
      value: 0
      unit: W
  tfln:
    name: TFLN
    version: '[0.9,)'
    reference: tfln
    attributes:
      - tfln_parameters_1_current_value
      - tfln_parameters_1_new_value
      - tfln_parameters_2_current_value
      - tfln_parameters_2_new_value
      - tfln_parameters_3_current_value
      - tfln_parameters_3_new_value
      - tfln_parameters_4_current_value
      - tfln_parameters_4_new_value
      - tfln_parameters_5_current_value
      - tfln_parameters_5_new_value
      - tfln_parameters_6_current_value
      - tfln_parameters_6_new_value
      - tfln_parameters_7_current_value
      - tfln_parameters_7_new_value
      - tfln_parameters_8_current_value
      - tfln_parameters_8_new_value
      - tfln_parameters_9_current_value
      - tfln_parameters_9_new_value
      - tfln_parameters_10_current_value
      - tfln_parameters_10_new_value
      - tfln_parameters_11_current_value
      - tfln_parameters_11_new_value
      - tfln_parameters_12_current_value
      - tfln_parameters_12_new_value
      - tfln_parameters_13_current_value
      - tfln_parameters_13_new_value
      - tfln_parameters_14_current_value
      - tfln_parameters_14_new_value
      - tfln_parameters_15_current_value
      - tfln_parameters_15_new_value
      - tfln_parameters_16_current_value
      - tfln_parameters_16_new_value
      - tfln_analogue_values_1_current_value
      - tfln_analogue_values_1_new_value
      - tfln_analogue_values_1_range
      - tfln_analogue_values_2_current_value
      - tfln_analogue_values_2_new_value
      - tfln_analogue_values_2_range
      - tfln_analogue_values_3_current_value
      - tfln_analogue_values_3_new_value
      - tfln_analogue_values_3_range
      - tfln_analogue_values_4_current_value
      - tfln_analogue_values_4_new_value
      - tfln_analogue_values_4_range
      - tfln_analogue_values_5_current_value
      - tfln_analogue_values_5_new_value
      - tfln_analogue_values_5_range
      - tfln_inventory_unit_id
      - tfln_inventory_module_type
      - tfln_inventory_id_number
      - tfln_inventory_serial_number
      - tfln_inventory_manufacturer
      - tfln_inventory_production_year
      - tfln_inventory_description
      - tfln_inventory_hardware_revision
      - tfln_inventory_software_id
      - tfln_inventory_software_version
      - dl_laser_alarm
      - tfln_temperature_alarm
      - board_failure_alarm
      - dl_rf_alarm
      - ul_rf_alarm
      - rx1_optical_power_fail_alarm
      - rx1_agc_out_of_range_alarm
      - rx2_optical_power_fail_alarm
      - rx2_agc_out_of_range_alarm
      - rx3_optical_power_fail_alarm
      - rx3_agc_out_of_range_alarm
      - rx4_optical_power_fail_alarm
      - rx4_agc_out_of_range_alarm
    alarms:
      board_failure_alarm:
        attributes:
          - board_failure_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      dl_laser_alarm:
        attributes:
          - dl_laser_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      dl_rf_alarm:
        attributes:
          - dl_rf_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      rx1_agc_out_of_range_alarm:
        attributes:
          - rx1_agc_out_of_range_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      rx1_optical_power_fail_alarm:
        attributes:
          - rx1_optical_power_fail_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      rx2_agc_out_of_range_alarm:
        attributes:
          - rx2_agc_out_of_range_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      rx2_optical_power_fail_alarm:
        attributes:
          - rx2_optical_power_fail_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      rx3_agc_out_of_range_alarm:
        attributes:
          - rx3_agc_out_of_range_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      rx3_optical_power_fail_alarm:
        attributes:
          - rx3_optical_power_fail_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      rx4_agc_out_of_range_alarm:
        attributes:
          - rx4_agc_out_of_range_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      rx4_optical_power_fail_alarm:
        attributes:
          - rx4_optical_power_fail_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      tfln_temperature_alarm:
        attributes:
          - tfln_temperature_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      ul_rf_alarm:
        attributes:
          - ul_rf_alarm
        mapper: '%{resources.mappers.alarm_severity}'
    price:
      value: 0
      unit: USD
    energy:
      value: 0
      unit: W
  tpoi:
    name: TPOI
    version: '[0.1,)'
    reference: tpoi
    attributes:
      - tpoi_parameters_1_current_value
      - tpoi_parameters_1_new_value
      - tpoi_analogue_values_1_current_value
      - tpoi_analogue_values_1_new_value
      - tpoi_analogue_values_1_range
      - tpoi_analogue_values_2_current_value
      - tpoi_analogue_values_2_new_value
      - tpoi_analogue_values_2_range
      - tpoi_analogue_values_3_current_value
      - tpoi_analogue_values_3_new_value
      - tpoi_analogue_values_3_range
      - tpoi_analogue_values_4_current_value
      - tpoi_analogue_values_4_new_value
      - tpoi_analogue_values_4_range
      - tpoi_analogue_values_5_current_value
      - tpoi_analogue_values_5_new_value
      - tpoi_analogue_values_5_range
      - tpoi_analogue_values_6_current_value
      - tpoi_analogue_values_6_new_value
      - tpoi_analogue_values_6_range
      - tpoi_inventory_unit_id
      - tpoi_inventory_module_type
      - tpoi_inventory_id_number
      - tpoi_inventory_serial_number
      - tpoi_inventory_manufacturer
      - tpoi_inventory_production_year
      - tpoi_inventory_description
      - tpoi_inventory_hardware_revision
      - tpoi_inventory_software_id
      - tpoi_inventory_software_version
      - tpoi_temperature_alarm
      - tpoi_power_supply_alarm
      - vcc_alarm
      - dl_mimo_ch1_rf_alarm
      - dl_mimo_ch2_rf_alarm
      - ul_mimo_ch1_rf_alarm
      - ul_mimo_ch2_rf_alarm
      - overdrive_alc_limiting_700_com_alarm
      - over_power_700_com_alarm
    alarms:
      dl_mimo_ch1_rf_alarm:
        attributes:
          - dl_mimo_ch1_rf_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      dl_mimo_ch2_rf_alarm:
        attributes:
          - dl_mimo_ch2_rf_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      over_power_700_com_alarm:
        attributes:
          - over_power_700_com_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      overdrive_alc_limiting_700_com_alarm:
        attributes:
          - overdrive_alc_limiting_700_com_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      tpoi_power_supply_alarm:
        attributes:
          - tpoi_power_supply_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      tpoi_temperature_alarm:
        attributes:
          - tpoi_temperature_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      ul_mimo_ch1_rf_alarm:
        attributes:
          - ul_mimo_ch1_rf_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      ul_mimo_ch2_rf_alarm:
        attributes:
          - ul_mimo_ch2_rf_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      vcc_alarm:
        attributes:
          - vcc_alarm
        mapper: '%{resources.mappers.alarm_severity}'
    price:
      value: 0
      unit: USD
    energy:
      value: 0
      unit: W
  tprn:
    name: TPRN
    version: '[0.9,)'
    reference: tprn
    attributes:
      - tprn_parameters_1_current_value
      - tprn_parameters_1_new_value
      - tprn_parameters_2_current_value
      - tprn_parameters_2_new_value
      - tprn_parameters_3_current_value
      - tprn_parameters_3_new_value
      - tprn_parameters_4_current_value
      - tprn_parameters_4_new_value
      - tprn_parameters_5_current_value
      - tprn_parameters_5_new_value
      - tprn_parameters_6_current_value
      - tprn_parameters_6_new_value
      - tprn_parameters_7_current_value
      - tprn_parameters_7_new_value
      - tprn_parameters_8_current_value
      - tprn_parameters_8_new_value
      - tprn_parameters_9_current_value
      - tprn_parameters_9_new_value
      - tprn_parameters_10_current_value
      - tprn_parameters_10_new_value
      - tprn_parameters_11_current_value
      - tprn_parameters_11_new_value
      - tprn_parameters_12_current_value
      - tprn_parameters_12_new_value
      - tprn_parameters_13_current_value
      - tprn_parameters_13_new_value
      - tprn_parameters_14_current_value
      - tprn_parameters_14_new_value
      - tprn_parameters_15_current_value
      - tprn_parameters_15_new_value
      - tprn_parameters_16_current_value
      - tprn_parameters_16_new_value
      - tprn_parameters_17_current_value
      - tprn_parameters_17_new_value
      - tprn_parameters_18_current_value
      - tprn_parameters_18_new_value
      - tprn_parameters_19_current_value
      - tprn_parameters_19_new_value
      - tprn_parameters_20_current_value
      - tprn_parameters_20_new_value
      - tprn_parameters_21_current_value
      - tprn_parameters_21_new_value
      - tprn_parameters_22_current_value
      - tprn_parameters_22_new_value
      - tprn_analogue_values_1_current_value
      - tprn_analogue_values_1_new_value
      - tprn_analogue_values_1_range
      - tprn_inventory_unit_id
      - tprn_inventory_module_type
      - tprn_inventory_id_number
      - tprn_inventory_serial_number
      - tprn_inventory_manufacturer
      - tprn_inventory_production_year
      - tprn_inventory_description
      - tprn_inventory_hardware_revision
      - tprn_inventory_software_id
      - tprn_inventory_software_version
      - tprn_temperature_alarm
      - i2c_bus_alarm
      - tprn_power_supply_alarm
      - general_slot_1_alarm
      - general_slot_2_alarm
      - general_slot_3_alarm
      - general_slot_4_alarm
      - general_slot_5_alarm
      - general_slot_6_alarm
      - general_slot_7_alarm
      - general_slot_8_alarm
      - general_slot_9_alarm
      - general_slot_10_alarm
      - general_slot_11_alarm
      - general_slot_12_alarm
      - aux_input_nr_0_alarm
      - aux_input_nr_1_alarm
      - aux_input_nr_2_alarm
      - aux_input_nr_3_alarm
    alarms:
      aux_input_nr_0_alarm:
        attributes:
          - aux_input_nr_0_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      aux_input_nr_1_alarm:
        attributes:
          - aux_input_nr_1_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      aux_input_nr_2_alarm:
        attributes:
          - aux_input_nr_2_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      aux_input_nr_3_alarm:
        attributes:
          - aux_input_nr_3_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      general_slot_1_alarm:
        attributes:
          - general_slot_1_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      general_slot_2_alarm:
        attributes:
          - general_slot_2_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      general_slot_3_alarm:
        attributes:
          - general_slot_3_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      general_slot_4_alarm:
        attributes:
          - general_slot_4_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      general_slot_5_alarm:
        attributes:
          - general_slot_5_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      general_slot_6_alarm:
        attributes:
          - general_slot_6_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      general_slot_7_alarm:
        attributes:
          - general_slot_7_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      general_slot_8_alarm:
        attributes:
          - general_slot_8_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      general_slot_9_alarm:
        attributes:
          - general_slot_9_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      general_slot_10_alarm:
        attributes:
          - general_slot_10_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      general_slot_11_alarm:
        attributes:
          - general_slot_11_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      general_slot_12_alarm:
        attributes:
          - general_slot_12_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      i2c_bus_alarm:
        attributes:
          - i2c_bus_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      tprn_power_supply_alarm:
        attributes:
          - tprn_power_supply_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      tprn_temperature_alarm:
        attributes:
          - tprn_temperature_alarm
        mapper: '%{resources.mappers.alarm_severity}'
    price:
      value: 0
      unit: USD
    energy:
      value: 0
      unit: W
  tsun:
    name: TSUN
    version: '[0.3,)'
    reference: tsun
    attributes:
      - tsun_parameters_1_current_value
      - tsun_parameters_1_new_value
      - tsun_parameters_2_current_value
      - tsun_parameters_2_new_value
      - tsun_parameters_3_current_value
      - tsun_parameters_3_new_value
      - tsun_parameters_4_current_value
      - tsun_parameters_4_new_value
      - tsun_parameters_5_current_value
      - tsun_parameters_5_new_value
      - tsun_parameters_6_current_value
      - tsun_parameters_6_new_value
      - tsun_parameters_7_current_value
      - tsun_parameters_7_new_value
      - tsun_analogue_values_1_current_value
      - tsun_analogue_values_1_new_value
      - tsun_analogue_values_1_range
      - tsun_analogue_values_2_current_value
      - tsun_analogue_values_2_new_value
      - tsun_analogue_values_2_range
      - tsun_analogue_values_3_current_value
      - tsun_analogue_values_3_new_value
      - tsun_analogue_values_3_range
      - tsun_inventory_unit_id
      - tsun_inventory_module_type
      - tsun_inventory_id_number
      - tsun_inventory_serial_number
      - tsun_inventory_manufacturer
      - tsun_inventory_production_year
      - tsun_inventory_description
      - tsun_inventory_hardware_revision
      - tsun_inventory_software_id
      - tsun_inventory_software_version
      - cpu_fault_alarm
      - internal_bus_alarm
    alarms:
      cpu_fault_alarm:
        attributes:
          - cpu_fault_alarm
        mapper: '%{resources.mappers.alarm_severity}'
      internal_bus_alarm:
        attributes:
          - internal_bus_alarm
        mapper: '%{resources.mappers.alarm_severity}'
    price:
      value: 0
      unit: USD
    energy:
      value: 0
      unit: W
attributes:
  agc_out_of_range_alarm:
    name: AGC Out Of Range Alarm
    description: AGC Out Of Range Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  aux_input_nr_0_alarm:
    name: Aux Input Nr 0 Alarm
    description: Aux Input Nr 0 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  aux_input_nr_1_alarm:
    name: Aux Input Nr 1 Alarm
    description: Aux Input Nr 1 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  aux_input_nr_2_alarm:
    name: Aux Input Nr 2 Alarm
    description: Aux Input Nr 2 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  aux_input_nr_3_alarm:
    name: Aux Input Nr 3 Alarm
    description: Aux Input Nr 3 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  board_failure_alarm:
    name: Board Failure Alarm
    description: Board Failure Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  communication_error_add_1_alarm:
    name: Communication Error Add 1 Alarm
    description: Communication Error Add 1 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  communication_error_add_2_alarm:
    name: Communication Error Add 2 Alarm
    description: Communication Error Add 2 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  communication_error_add_3_alarm:
    name: Communication Error Add 3 Alarm
    description: Communication Error Add 3 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  communication_error_add_4_alarm:
    name: Communication Error Add 4 Alarm
    description: Communication Error Add 4 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  communication_error_add_5_alarm:
    name: Communication Error Add 5 Alarm
    description: Communication Error Add 5 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  communication_error_add_6_alarm:
    name: Communication Error Add 6 Alarm
    description: Communication Error Add 6 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  communication_error_add_7_alarm:
    name: Communication Error Add 7 Alarm
    description: Communication Error Add 7 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  communication_error_add_8_alarm:
    name: Communication Error Add 8 Alarm
    description: Communication Error Add 8 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  communication_error_add_9_alarm:
    name: Communication Error Add 9 Alarm
    description: Communication Error Add 9 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  communication_error_add_10_alarm:
    name: Communication Error Add 10 Alarm
    description: Communication Error Add 10 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  communication_error_add_11_alarm:
    name: Communication Error Add 11 Alarm
    description: Communication Error Add 11 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  communication_error_add_12_alarm:
    name: Communication Error Add 12 Alarm
    description: Communication Error Add 12 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  communication_error_add_13_alarm:
    name: Communication Error Add 13 Alarm
    description: Communication Error Add 13 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  communication_error_add_14_alarm:
    name: Communication Error Add 14 Alarm
    description: Communication Error Add 14 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  cpu_fault_alarm:
    name: CPU Fault Alarm
    description: CPU Fault Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  dl_cell_850_band_alarm:
    name: DL Cell 850 Band Alarm
    description: DL Cell 850 Band Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  dl_laser_alarm:
    name: DL Laser Alarm
    description: DL Laser Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  dl_mimo_ch1_rf_alarm:
    name: DL MIMO CH1 RF Alarm
    description: DL MIMO CH1 RF Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  dl_mimo_ch2_rf_alarm:
    name: DL MIMO CH2 RF Alarm
    description: DL MIMO CH2 RF Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  dl_optical_power_fail_alarm:
    name: DL Optical Power Fail Alarm
    description: DL Optical Power Fail Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  dl_pcs_1900_band_alarm:
    name: DL PCS 1900 Band Alarm
    description: DL PCS 1900 Band Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  dl_rf_alarm:
    name: DL RF Alarm
    description: DL RF Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  external_1_alarm:
    name: External 1 Alarm
    description: External 1 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  external_2_alarm:
    name: External 2 Alarm
    description: External 2 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  general_rs485_bus_error_alarm:
    name: General Rs485 Bus Error Alarm
    description: General Rs485 Bus Error Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  general_slot_1_alarm:
    name: General Slot 1 Alarm
    description: General Slot 1 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  general_slot_2_alarm:
    name: General Slot 2 Alarm
    description: General Slot 2 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  general_slot_3_alarm:
    name: General Slot 3 Alarm
    description: General Slot 3 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  general_slot_4_alarm:
    name: General Slot 4 Alarm
    description: General Slot 4 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  general_slot_5_alarm:
    name: General Slot 5 Alarm
    description: General Slot 5 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  general_slot_6_alarm:
    name: General Slot 6 Alarm
    description: General Slot 6 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  general_slot_7_alarm:
    name: General Slot 7 Alarm
    description: General Slot 7 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  general_slot_8_alarm:
    name: General Slot 8 Alarm
    description: General Slot 8 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  general_slot_9_alarm:
    name: General Slot 9 Alarm
    description: General Slot 9 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  general_slot_10_alarm:
    name: General Slot 10 Alarm
    description: General Slot 10 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  general_slot_11_alarm:
    name: General Slot 11 Alarm
    description: General Slot 11 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  general_slot_12_alarm:
    name: General Slot 12 Alarm
    description: General Slot 12 Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  i2c_bus_alarm:
    name: I2c Bus Alarm
    description: I2c Bus Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  internal_bus_alarm:
    name: Internal Bus Alarm
    description: Internal Bus Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  mc_overview_configuration_automatic_reboot:
    name: Master Controller Automatic Reboot After Overtemperature Shutdown
    description: Master Controller Automatix Reboot after Overtemperature Shutdown
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_mc_status}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Automatic reboot")]/following-sibling::td[1]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  mc_overview_configuration_battery_backup:
    name: Master Controller Battery Backup
    description: Master Controller Battery Backup
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_mc_status}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Battery Backup")]/following-sibling::td/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  mc_overview_error_status:
    name: Master Controller Error Status
    description: Master Controller Error Status
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_mc_status}'
      selector:
        type: xpath
        expression: //*[contains(text(), "MC Error Status")]/../following-sibling::tr[1]/td/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  mc_overview_software_version:
    name: Master Controller Software Version
    description: Master Controller Software Version
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_mc_status}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Version:")]/following-sibling::td/text()
      extractor:
        filters:
          1: regexpReplace /^(\d+\.\d+)\.?.*$/ => $1
    properties:
      readWrite: R
      read:
        type: String
  mc_overview_temperature_alarm_threshold:
    name: Master Controller Temperature Alarm Threshold
    description: Master Controller Temperature Alarm Threshold
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_mc_status}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Alarm Threshold")]/following-sibling::td[1]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: Int32
        unit: C
  mc_overview_temperature_external:
    name: Master Controller External Temperature
    description: Master Controller External Temperature
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_mc_status}'
      selector:
        type: xpath
        expression: //*[contains(text(), "External Temperature")]/following-sibling::td/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: Int32
        unit: C
  mc_overview_temperature_internal:
    name: Master Controller Internal Temperature
    description: Master Controller Internal Temperature
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_mc_status}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Internal Temperature")]/following-sibling::td/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: Int32
        unit: C
  mc_setting_latitude:
    name: Master Controller Unit Latitude
    description: Master Controller Unit Latitude
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_mc_unit_id}'
      selector:
        type: xpath
        expression: //*[contains(@name, "mmrLocationLat")]/@value
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  mc_setting_location:
    name: Master Controller Location
    description: Master Controller Location
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_mc_unit_id}'
      selector:
        type: xpath
        expression: //*[contains(@name, "mmrLocationValue")]/@value
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  mc_setting_longitude:
    name: Master Controller Unit Longitude
    description: Master Controller Unit Longitude
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_mc_unit_id}'
      selector:
        type: xpath
        expression: //*[contains(@name, "mmrLocationLon")]/@value
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  mc_setting_system_name:
    name: Master Controller SysName / SiteID
    description: System Name/ Site ID
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_mc_unit_id}'
      selector:
        type: xpath
        expression: //*[contains(@name, "mmrLocationSysName")]/@value
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  mc_setting_unit_id:
    name: Master Controller Unit
    description: Master Controller Unit
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_mc_unit_id}'
      selector:
        type: xpath
        expression: //*[contains(@name, "mmrLocationAddress")]/@value
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  over_power_700_com_alarm:
    name: Over Power 700 Com Alarm
    description: Over Power 700 Com Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  overdrive_alc_limiting_700_com_alarm:
    name: Overdrive ALC Limiting 700 Com Alarm
    description: Overdrive ALC Limiting 700 Com Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  rx1_agc_out_of_range_alarm:
    name: RX1 AGC Out Of Range Alarm
    description: RX1 AGC Out Of Range Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  rx1_optical_power_fail_alarm:
    name: RX1 Optical Power Fail Alarm
    description: RX1 Optical Power Fail Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  rx2_agc_out_of_range_alarm:
    name: RX2 AGC Out Of Range Alarm
    description: RX2 AGC Out Of Range Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  rx2_optical_power_fail_alarm:
    name: RX2 Optical Power Fail Alarm
    description: RX2 Optical Power Fail Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  rx3_agc_out_of_range_alarm:
    name: RX3 AGC Out Of Range Alarm
    description: RX3 AGC Out Of Range Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  rx3_optical_power_fail_alarm:
    name: RX3 Optical Power Fail Alarm
    description: RX3 Optical Power Fail Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  rx4_agc_out_of_range_alarm:
    name: RX4 AGC Out Of Range Alarm
    description: RX4 AGC Out Of Range Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  rx4_optical_power_fail_alarm:
    name: RX4 Optical Power Fail Alarm
    description: RX4 Optical Power Fail Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  sensor_fail_alarm:
    name: Sensor Fail Alarm
    description: Sensor Fail Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfah_inventory_description:
    name: TFAH Inventory Description
    description: TFAH Inventory Description
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfah_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[7]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfah_inventory_hardware_revision:
    name: TFAH Inventory Hardware Revision
    description: TFAH Inventory Hardware Revision
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfah_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[8]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfah_inventory_id_number:
    name: TFAH Inventory ID Number
    description: TFAH Inventory ID Number
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfah_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[3]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfah_inventory_manufacturer:
    name: TFAH Inventory Manufacturer
    description: TFAH Inventory Manufacturer
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfah_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[5]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfah_inventory_module_type:
    name: TFAH Inventory Module Type
    description: TFAH Inventory Module Type
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfah_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfah_inventory_production_year:
    name: TFAH Inventory Production Year
    description: TFAH Inventory Production Year
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfah_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[6]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfah_inventory_serial_number:
    name: TFAH Inventory Serial Number
    description: TFAH Inventory Serial Number
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfah_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[4]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfah_inventory_software_id:
    name: TFAH Inventory Software ID
    description: TFAH Inventory Software ID
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfah_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[9]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfah_inventory_software_version:
    name: TFAH Inventory Software Version
    description: TFAH Inventory Software Version
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfah_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[10]/text()
      extractor:
        filters:
          1: regexpReplace /^(\d+\.\d+)\.?.*$/ => $1
    properties:
      readWrite: R
      read:
        type: String
  tfah_inventory_unit_id:
    name: TFAH Inventory Unit
    description: TFAH Inventory Unit
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfah_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[1]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfah_power_supply_alarm:
    name: Power Supply Alarm
    description: Power Supply Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfah_setting_latitude:
    name: TFAH Unit Latitude
    description: TFAH Unit Latitude
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfah_unit_id}'
      selector:
        type: xpath
        expression: //*[contains(@name, "mmrLocationLat")]/@value
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfah_setting_location:
    name: TFAH Setting Location
    description: TFAH Setting Location
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfah_unit_id}'
      selector:
        type: xpath
        expression: //*[contains(@name, "mmrLocationValue")]/@value
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfah_setting_longitude:
    name: TFAH Unit Longitude
    description: TFAH Unit Longitude
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfah_unit_id}'
      selector:
        type: xpath
        expression: //*[contains(@name, "mmrLocationLon")]/@value
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfah_setting_system_name:
    name: TFAH Setting SysName / SiteID
    description: System Name/ Site ID
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfah_unit_id}'
      selector:
        type: xpath
        expression: //*[contains(@name, "mmrLocationSysName")]/@value
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfah_setting_unit_id:
    name: TFAH Setting Unit
    description: TFAH Setting Unit
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfah_unit_id}'
      selector:
        type: xpath
        expression: //*[contains(@name, "mmrLocationGuiStr")]/@value
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfah_temperature_alarm:
    name: Temperature Alarm
    description: Temperature Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_analogue_values_1_current_value:
    name: TFLN Parameters RX_1 Optical Pwr Current Value
    description: TFLN Parameters RX_1 Optical Pwr Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_1 Optical Pwr")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
        unit: C
  tfln_analogue_values_1_new_value:
    name: TFLN Parameters RX_1 Optical Pwr New Value
    description: TFLN Parameters RX_1 Optical Pwr New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_1 Optical Pwr")]/../td[3]/input/@value
      extractor: {}
    properties:
      readWrite: RW
      read:
        type: String
        unit: C
  tfln_analogue_values_1_range:
    name: TFLN Analogue Values RX_1 Optical Pwr Range
    description: TFLN Analogue Values RX_1 Optical Pwr Range
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_1 Optical Pwr")]/../td[4]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_analogue_values_2_current_value:
    name: TFLN Parameters RX_2 Optical Pwr Current Value
    description: TFLN Parameters RX_2 Optical Pwr Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_2 Optical Pwr")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
        unit: C
  tfln_analogue_values_2_new_value:
    name: TFLN Parameters RX_2 Optical Pwr New Value
    description: TFLN Parameters RX_2 Optical Pwr New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_2 Optical Pwr")]/../td[3]/input/@value
      extractor: {}
    properties:
      readWrite: RW
      read:
        type: String
        unit: C
  tfln_analogue_values_2_range:
    name: TFLN Analogue Values RX_2 Optical Pwr Range
    description: TFLN Analogue Values RX_2 Optical Pwr Range
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_2 Optical Pwr")]/../td[4]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_analogue_values_3_current_value:
    name: TFLN Parameters RX_3 Optical Pwr Current Value
    description: TFLN Parameters RX_3 Optical Pwr Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_3 Optical Pwr")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
        unit: C
  tfln_analogue_values_3_new_value:
    name: TFLN Parameters RX_3 Optical Pwr New Value
    description: TFLN Parameters RX_3 Optical Pwr New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_3 Optical Pwr")]/../td[3]/input/@value
      extractor: {}
    properties:
      readWrite: RW
      read:
        type: String
        unit: C
  tfln_analogue_values_3_range:
    name: TFLN Analogue Values RX_3 Optical Pwr Range
    description: TFLN Analogue Values RX_3 Optical Pwr Range
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_3 Optical Pwr")]/../td[4]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_analogue_values_4_current_value:
    name: TFLN Parameters RX_4 Optical Pwr Current Value
    description: TFLN Parameters RX_4 Optical Pwr Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_4 Optical Pwr")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
        unit: C
  tfln_analogue_values_4_new_value:
    name: TFLN Parameters RX_4 Optical Pwr New Value
    description: TFLN Parameters RX_4 Optical Pwr New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_4 Optical Pwr")]/../td[3]/input/@value
      extractor: {}
    properties:
      readWrite: RW
      read:
        type: String
        unit: C
  tfln_analogue_values_4_range:
    name: TFLN Analogue Values RX_4 Optical Pwr Range
    description: TFLN Analogue Values RX_4 Optical Pwr Range
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_4 Optical Pwr")]/../td[4]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_analogue_values_5_current_value:
    name: TFLN Parameters Temperature Current Value
    description: TFLN Parameters Temperature Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Temperature")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
        unit: C
  tfln_analogue_values_5_new_value:
    name: TFLN Parameters Temperature New Value
    description: TFLN Parameters Temperature New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Temperature")]/../td[3]/input/@value
      extractor: {}
    properties:
      readWrite: RW
      read:
        type: String
        unit: C
  tfln_analogue_values_5_range:
    name: TFLN Analogue Values Temperature Range
    description: TFLN Analogue Values Temperature Range
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Temperature")]/../td[4]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_inventory_description:
    name: TFLN Inventory Description
    description: TFLN Inventory Description
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[7]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_inventory_hardware_revision:
    name: TFLN Inventory Hardware Revision
    description: TFLN Inventory Hardware Revision
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[8]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_inventory_id_number:
    name: TFLN Inventory ID Number
    description: TFLN Inventory ID Number
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[3]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_inventory_manufacturer:
    name: TFLN Inventory Manufacturer
    description: TFLN Inventory Manufacturer
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[5]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_inventory_module_type:
    name: TFLN Inventory Module Type
    description: TFLN Inventory Module Type
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_inventory_production_year:
    name: TFLN Inventory Production Year
    description: TFLN Inventory Production Year
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[6]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_inventory_serial_number:
    name: TFLN Inventory Serial Number
    description: TFLN Inventory Serial Number
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[4]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_inventory_software_id:
    name: TFLN Inventory Software ID
    description: TFLN Inventory Software ID
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[9]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_inventory_software_version:
    name: TFLN Inventory Software Version
    description: TFLN Inventory Software Version
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[10]/text()
      extractor:
        filters:
          1: regexpReplace /^(\d+\.\d+)\.?.*$/ => $1
    properties:
      readWrite: R
      read:
        type: String
  tfln_inventory_unit_id:
    name: TFLN Inventory Unit
    description: TFLN Inventory Unit
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[1]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_1_current_value:
    name: TFLN Parameter RX_1 data link Current Value
    description: TFLN Parameter RX_1 data link Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_1 data link")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_1_new_value:
    name: TFLN Parameter RX_1 data link New Value
    description: TFLN Parameter RX_1 data link New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_1 data link")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_2_current_value:
    name: TFLN Parameter RX_1 Pilot tone Current Value
    description: TFLN Parameter RX_1 Pilot tone Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_1 Pilot tone")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_2_new_value:
    name: TFLN Parameter RX_1 Pilot tone New Value
    description: TFLN Parameter RX_1 Pilot tone New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_1 Pilot tone")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_3_current_value:
    name: TFLN Parameter RX_1 Enable Current Value
    description: TFLN Parameter RX_1 Enable Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_1 Enable")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_3_new_value:
    name: TFLN Parameter RX_1 Enable New Value
    description: TFLN Parameter RX_1 Enable New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_1 Enable")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_4_current_value:
    name: TFLN Parameter RX_2 data link Current Value
    description: TFLN Parameter RX_2 data link Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_2 data link")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_4_new_value:
    name: TFLN Parameter RX_2 data link New Value
    description: TFLN Parameter RX_2 data link New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_2 data link")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_5_current_value:
    name: TFLN Parameter RX_2 Pilot tone Current Value
    description: TFLN Parameter RX_2 Pilot tone Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_2 Pilot tone")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_5_new_value:
    name: TFLN Parameter RX_2 Pilot tone New Value
    description: TFLN Parameter RX_2 Pilot tone New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_2 Pilot tone")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_6_current_value:
    name: TFLN Parameter RX_2 Enable Current Value
    description: TFLN Parameter RX_2 Enable Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_2 Enable")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_6_new_value:
    name: TFLN Parameter RX_2 Enable New Value
    description: TFLN Parameter RX_2 Enable New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_2 Enable")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_7_current_value:
    name: TFLN Parameter RX_3 data link Current Value
    description: TFLN Parameter RX_3 data link Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_3 data link")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_7_new_value:
    name: TFLN Parameter RX_3 data link New Value
    description: TFLN Parameter RX_3 data link New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_3 data link")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_8_current_value:
    name: TFLN Parameter RX_3 Pilot tone Current Value
    description: TFLN Parameter RX_3 Pilot tone Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_3 Pilot tone")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_8_new_value:
    name: TFLN Parameter RX_3 Pilot tone New Value
    description: TFLN Parameter RX_3 Pilot tone New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_3 Pilot tone")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_9_current_value:
    name: TFLN Parameter RX_3 Enable Current Value
    description: TFLN Parameter RX_3 Enable Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_3 Enable")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_9_new_value:
    name: TFLN Parameter RX_3 Enable New Value
    description: TFLN Parameter RX_3 Enable New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_3 Enable")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_10_current_value:
    name: TFLN Parameter RX_4 data link Current Value
    description: TFLN Parameter RX_4 data link Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_4 data link")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_10_new_value:
    name: TFLN Parameter RX_4 data link New Value
    description: TFLN Parameter RX_4 data link New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_4 data link")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_11_current_value:
    name: TFLN Parameter RX_4 Pilot tone Current Value
    description: TFLN Parameter RX_4 Pilot tone Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_4 Pilot tone")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_11_new_value:
    name: TFLN Parameter RX_4 Pilot tone New Value
    description: TFLN Parameter RX_4 Pilot tone New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_4 Pilot tone")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_12_current_value:
    name: TFLN Parameter RX_4 Enable Current Value
    description: TFLN Parameter RX_4 Enable Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_4 Enable")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_12_new_value:
    name: TFLN Parameter RX_4 Enable New Value
    description: TFLN Parameter RX_4 Enable New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "RX_4 Enable")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_13_current_value:
    name: TFLN Parameter TFA compatibility Current Value
    description: TFLN Parameter TFA compatibility Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "TFA compatibility")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_13_new_value:
    name: TFLN Parameter TFA compatibility New Value
    description: TFLN Parameter TFA compatibility New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "TFA compatibility")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_14_current_value:
    name: TFLN Parameter DL Laser Shut Down Current Value
    description: TFLN Parameter DL Laser Shut Down Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "DL Laser Shut Down")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_14_new_value:
    name: TFLN Parameter DL Laser Shut Down New Value
    description: TFLN Parameter DL Laser Shut Down New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "DL Laser Shut Down")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_15_current_value:
    name: TFLN Parameter TFAxx Discovery Current Value
    description: TFLN Parameter TFAxx Discovery Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "TFAxx Discovery")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_15_new_value:
    name: TFLN Parameter TFAxx Discovery New Value
    description: TFLN Parameter TFAxx Discovery New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "TFAxx Discovery")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_16_current_value:
    name: TFLN Parameter Auto Discovery Mask Current Value
    description: TFLN Parameter Auto Discovery Mask Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Auto Discovery Mask")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_parameters_16_new_value:
    name: TFLN Parameter Auto Discovery Mask New Value
    description: TFLN Parameter Auto Discovery Mask New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tfln_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Auto Discovery Mask")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tfln_temperature_alarm:
    name: Temperature Alarm
    description: Temperature Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_analogue_values_1_current_value:
    name: TPOI Analogue Values Temperature Current Value
    description: TPOI Analogue Values Temperature Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Temperature")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
        unit: C
  tpoi_analogue_values_1_new_value:
    name: TPOI Analogue Values Temperature New Value
    description: TPOI Analogue Values Temperature New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Temperature")]/../td[3]/input/@value
      extractor: {}
    properties:
      readWrite: RW
      read:
        type: String
        unit: C
  tpoi_analogue_values_1_range:
    name: TPOI Analogue Values Temperature Range
    description: TPOI Analogue Values Temperature Range
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Temperature")]/../td[4]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_analogue_values_2_current_value:
    name: TPOI Analogue Values Downlink 700 Com Attenuation Current Value
    description: TPOI Analogue Values Downlink 700 Com Attenuation Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Downlink 700 Com Attenuation")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
        unit: C
  tpoi_analogue_values_2_new_value:
    name: TPOI Analogue Values Downlink 700 Com Attenuation New Value
    description: TPOI Analogue Values Downlink 700 Com Attenuation New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Downlink 700 Com Attenuation")]/../td[3]/input/@value
      extractor: {}
    properties:
      readWrite: RW
      read:
        type: String
        unit: C
  tpoi_analogue_values_2_range:
    name: TPOI Analogue Values Downlink 700 Com Attenuation Range
    description: TPOI Analogue Values Downlink 700 Com Attenuation Range
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Downlink 700 Com Attenuation")]/../td[4]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_analogue_values_3_current_value:
    name: TPOI Analogue Values Uplink 700 Com Attenuation Current Value
    description: TPOI Analogue Values Uplink 700 Com Attenuation Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Uplink 700 Com Attenuation")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
        unit: C
  tpoi_analogue_values_3_new_value:
    name: TPOI Analogue Values Uplink 700 Com Attenuation New Value
    description: TPOI Analogue Values Uplink 700 Com Attenuation New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Uplink 700 Com Attenuation")]/../td[3]/input/@value
      extractor: {}
    properties:
      readWrite: RW
      read:
        type: String
        unit: C
  tpoi_analogue_values_3_range:
    name: TPOI Analogue Values Uplink 700 Com Attenuation Range
    description: TPOI Analogue Values Uplink 700 Com Attenuation Range
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Uplink 700 Com Attenuation")]/../td[4]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_analogue_values_4_current_value:
    name: TPOI Analogue Values Additive DL Attenuation Current Value
    description: TPOI Analogue Values Additive DL Attenuation Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Additive DL Attenuation")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_analogue_values_4_new_value:
    name: TPOI Analogue Values Additive DL Attenuation New Value
    description: TPOI Analogue Values Additive DL Attenuation New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Additive DL Attenuation")]/../td[3]/input/@value
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_analogue_values_4_range:
    name: TPOI Analogue Values Additive DL Attenuation Range
    description: TPOI Analogue Values Additive DL Attenuation Range
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Additive DL Attenuation")]/../td[4]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_analogue_values_5_current_value:
    name: TPOI Analogue Values 700 Com Overdrive Threshold Current Value
    description: TPOI Analogue Values 700 Com Overdrive Threshold Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "700 Com Overdrive Threshold")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_analogue_values_5_new_value:
    name: TPOI Analogue Values 700 Com Overdrive Threshold New Value
    description: TPOI Analogue Values 700 Com Overdrive Threshold New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "700 Com Overdrive Threshold")]/../td[3]/input/@value
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_analogue_values_5_range:
    name: TPOI Analogue Values 700 Com Overdrive Threshold Range
    description: TPOI Analogue Values 700 Com Overdrive Threshold Range
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "700 Com Overdrive Threshold")]/../td[4]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_analogue_values_6_current_value:
    name: TPOI Analogue Values 700 Com DL MIMO CH1 Power Current Value
    description: TPOI Analogue Values 700 Com DL MIMO CH1 Power Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "700 Com DL MIMO CH1 Power")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_analogue_values_6_new_value:
    name: TPOI Analogue Values 700 Com DL MIMO CH1 Power New Value
    description: TPOI Analogue Values 700 Com DL MIMO CH1 Power New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "700 Com DL MIMO CH1 Power")]/../td[3]/input/@value
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_analogue_values_6_range:
    name: TPOI Analogue Values 700 Com DL MIMO CH1 Power Range
    description: TPOI Analogue Values 700 Com DL MIMO CH1 Power Range
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "700 Com DL MIMO CH1 Power")]/../td[4]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_inventory_description:
    name: TPOI Inventory Description
    description: TPOI Inventory Description
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[7]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_inventory_hardware_revision:
    name: TPOI Inventory Hardware Revision
    description: TPOI Inventory Hardware Revision
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[8]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_inventory_id_number:
    name: TPOI Inventory ID Number
    description: TPOI Inventory ID Number
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[3]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_inventory_manufacturer:
    name: TPOI Inventory Manufacturer
    description: TPOI Inventory Manufacturer
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[5]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_inventory_module_type:
    name: TPOI Inventory Module Type
    description: TPOI Inventory Module Type
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_inventory_production_year:
    name: TPOI Inventory Production Year
    description: TPOI Inventory Production Year
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[6]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_inventory_serial_number:
    name: TPOI Inventory Serial Number
    description: TPOI Inventory Serial Number
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[4]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_inventory_software_id:
    name: TPOI Inventory Software ID
    description: TPOI Inventory Software ID
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[9]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_inventory_software_version:
    name: TPOI Inventory Software Version
    description: TPOI Inventory Software Version
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[10]/text()
      extractor:
        filters:
          1: regexpReplace /^(\d+\.\d+)\.?.*$/ => $1
    properties:
      readWrite: R
      read:
        type: String
  tpoi_inventory_unit_id:
    name: TPOI Inventory Unit
    description: TPOI Inventory Unit
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[1]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_parameters_1_current_value:
    name: TPOI Parameters 700 Com Overdrive Protection Current Value
    description: TPOI Parameters 700 Com Overdrive Protection Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "700 Com Overdrive Protection")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_parameters_1_new_value:
    name: TPOI Parameters 700 Com Overdrive Protection New Value
    description: TPOI Parameters 700 Com Overdrive Protection New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tpoi_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "700 Com Overdrive Protection")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_power_supply_alarm:
    name: Power Supply Alarm
    description: Power Supply Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tpoi_temperature_alarm:
    name: Temperature Alarm
    description: Temperature Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_analogue_values_1_current_value:
    name: "TPRN Parameters Subrack Temperature\tCurrent Value"
    description: TPRN Parameters Subrack Temperature Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Subrack Temperature")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
        unit: C
  tprn_analogue_values_1_new_value:
    name: TPRN Parameters Subrack Temperature New Value
    description: TPRN Parameters Subrack Temperature New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Subrack Temperature")]/../td[3]/input/@value
      extractor: {}
    properties:
      readWrite: RW
      read:
        type: String
        unit: C
  tprn_analogue_values_1_range:
    name: TPRN Analogue Values 1 Range
    description: TPRN Analogue Values 1 Range
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Subrack Temperature")]/../td[4]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_inventory_description:
    name: TPRN Inventory Description
    description: TPRN Inventory Description
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[7]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_inventory_hardware_revision:
    name: TPRN Inventory Hardware Revision
    description: TPRN Inventory Hardware Revision
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[8]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_inventory_id_number:
    name: TPRN Inventory ID Number
    description: TPRN Inventory ID Number
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[3]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_inventory_manufacturer:
    name: TPRN Inventory Manufacturer
    description: TPRN Inventory Manufacturer
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[5]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_inventory_module_type:
    name: TPRN Inventory Module Type
    description: TPRN Inventory Module Type
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_inventory_production_year:
    name: TPRN Inventory Production Year
    description: TPRN Inventory Production Year
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[6]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_inventory_serial_number:
    name: TPRN Inventory Serial Number
    description: TPRN Inventory Serial Number
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[4]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_inventory_software_id:
    name: TPRN Inventory Software ID
    description: TPRN Inventory Software ID
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[9]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_inventory_software_version:
    name: TPRN Inventory Software Version
    description: TPRN Inventory Software Version
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[10]/text()
      extractor:
        filters:
          1: regexpReplace /^(\d+\.\d+)\.?.*$/ => $1
    properties:
      readWrite: R
      read:
        type: String
  tprn_inventory_unit_id:
    name: TPRN Inventory Unit
    description: TPRN Inventory Unit
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[1]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_1_current_value:
    name: TPRN Parameter Relay 1 Status Current Value
    description: TPRN Parameter Relay 1 Status Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "relay 1 status")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_1_new_value:
    name: TPRN Parameter relay 1 status New Value
    description: TPRN Parameter relay 1 status New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "relay 1 status")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_2_current_value:
    name: TPRN Parameter Relay 2 Status Current Value
    description: TPRN Parameter Relay 2 Status Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "relay 2 status")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_2_new_value:
    name: TPRN Parameter Relay 2 Status New Value
    description: TPRN Parameter Relay 2 Status New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "relay 2 status")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_3_current_value:
    name: TPRN Parameter Relay 3 Status Current Value
    description: TPRN Parameter Relay 3 Status Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "relay 3 status")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_3_new_value:
    name: TPRN Parameter Relay 3 Status New Value
    description: TPRN Parameter relay 3 status New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "relay 3 status")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_4_current_value:
    name: TPRN Parameter Relay 4 Status Current Value
    description: TPRN Parameter Relay 4 Status Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "relay 4 status")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_4_new_value:
    name: TPRN Parameter Relay 4 Status New Value
    description: TPRN Parameter relay 4 status New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "relay 4 status")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_5_current_value:
    name: TPRN Parameter Power Supply Standby Current Value
    description: TPRN Parameter Power supply standby Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Power supply standby")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_5_new_value:
    name: TPRN Parameter Power Supply Standby New Value
    description: TPRN Parameter Power supply standby New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Power supply standby")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_6_current_value:
    name: TPRN Parameter Bus Reset Current Value
    description: TPRN Parameter Bus reset Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Bus reset")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_6_new_value:
    name: TPRN Parameter Bus Reset New Value
    description: TPRN Parameter Bus reset New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Bus reset")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_7_current_value:
    name: TPRN Parameter Board Presence Slot 1 Current Value
    description: TPRN Parameter Board Presence Slot 1 Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 1")][1]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_7_new_value:
    name: TPRN Parameter Board Presence Slot 1 New Value
    description: TPRN Parameter Board Presence Slot 1 New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 1")][1]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_8_current_value:
    name: TPRN Parameter Board Presence Slot 2 Current Value
    description: TPRN Parameter Board Presence Slot 2 Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 2")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_8_new_value:
    name: TPRN Parameter Board Presence Slot 2 New Value
    description: TPRN Parameter Board Presence Slot 2 New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 2")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_9_current_value:
    name: TPRN Parameter Board Presence Slot 3 Current Value
    description: TPRN Parameter Board Presence Slot 3 Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 3")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_9_new_value:
    name: TPRN Parameter Board Presence Slot 3 New Value
    description: TPRN Parameter Board Presence Slot 3 New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 3")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_10_current_value:
    name: TPRN Parameter Board Presence Slot 4 Current Value
    description: TPRN Parameter Board Presence Slot 4 Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 4")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_10_new_value:
    name: TPRN Parameter Board Presence Slot 4 New Value
    description: TPRN Parameter Board Presence Slot 4 New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 4")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_11_current_value:
    name: TPRN Parameter Board Presence Slot 5 Current Value
    description: TPRN Parameter Board Presence Slot 5 Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 5")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_11_new_value:
    name: TPRN Parameter Board Presence Slot 5 New Value
    description: TPRN Parameter Board Presence Slot 5 New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 5")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_12_current_value:
    name: TPRN Parameter Board Presence Slot 6 Current Value
    description: TPRN Parameter Board Presence Slot 6 Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 6")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_12_new_value:
    name: TPRN Parameter Board Presence Slot 6 New Value
    description: TPRN Parameter Board Presence Slot 6 New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 6")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_13_current_value:
    name: TPRN Parameter Board Presence Slot 7 Current Value
    description: TPRN Parameter Board Presence Slot 7 Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 7")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_13_new_value:
    name: TPRN Parameter Board Presence Slot 7 New Value
    description: TPRN Parameter Board Presence Slot 7 New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 7")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_14_current_value:
    name: TPRN Parameter Board Presence Slot 8 Current Value
    description: TPRN Parameter Board Presence Slot 8 Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 8")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_14_new_value:
    name: TPRN Parameter Board Presence Slot 8 New Value
    description: TPRN Parameter Board Presence Slot 8 New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 8")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_15_current_value:
    name: TPRN Parameter Board Presence Slot 9 Current Value
    description: TPRN Parameter Board Presence Slot 9 Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 9")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_15_new_value:
    name: TPRN Parameter Board Presence Slot 9 New Value
    description: TPRN Parameter Board Presence Slot 9 New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 9")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_16_current_value:
    name: TPRN Parameter Board Presence Slot 10 Current Value
    description: TPRN Parameter Board Presence Slot 10 Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 10")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_16_new_value:
    name: TPRN Parameter Board Presence Slot 10 New Value
    description: TPRN Parameter Board Presence Slot 10 New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 10")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_17_current_value:
    name: TPRN Parameter Board Presence Slot 11 Current Value
    description: TPRN Parameter Board Presence Slot 11 Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 11")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_17_new_value:
    name: TPRN Parameter Board Presence Slot 11 New Value
    description: TPRN Parameter Board Presence Slot 11 New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 11")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_18_current_value:
    name: TPRN Parameter Board Presence Slot 12 Current Value
    description: TPRN Parameter Board Presence Slot 12 Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 12")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_18_new_value:
    name: TPRN Parameter Board Presence Slot 12 New Value
    description: TPRN Parameter Board Presence Slot 12 New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Slot 12")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_19_current_value:
    name: TPRN Parameter Aux input alarm nr 0 polarity Current Value
    description: TPRN Parameter Aux input alarm nr 0 polarity Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Aux input alarm nr 0 polarity")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_19_new_value:
    name: TPRN Parameter Aux input alarm nr 0 polarity New Value
    description: TPRN Parameter Aux input alarm nr 0 polarity New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Aux input alarm nr 0 polarity")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_20_current_value:
    name: TPRN Parameter Aux input alarm nr 1 polarity Current Value
    description: TPRN Parameter Aux input alarm nr 1 polarity Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Aux input alarm nr 1 polarity")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_20_new_value:
    name: TPRN Parameter Aux input alarm nr 1 polarity New Value
    description: TPRN Parameter Aux input alarm nr 1 polarity New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Aux input alarm nr 1 polarity")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_21_current_value:
    name: TPRN Parameter Aux input alarm nr 2 polarity Current Value
    description: TPRN Parameter Aux input alarm nr 2 polarity Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Aux input alarm nr 2 polarity")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_21_new_value:
    name: TPRN Parameter Aux input alarm nr 2 polarity New Value
    description: TPRN Parameter Aux input alarm nr 2 polarity New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Aux input alarm nr 2 polarity")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_22_current_value:
    name: TPRN Parameter Aux input alarm nr 3 polarity Current Value
    description: TPRN Parameter Aux input alarm nr 3 polarity Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Aux input alarm nr 3 polarity")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_parameters_22_new_value:
    name: TPRN Parameter Aux input alarm nr 3 polarity New Value
    description: TPRN Parameter Aux input alarm nr 3 polarity New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tprn_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Aux input alarm nr 3 polarity")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_power_supply_alarm:
    name: Power Supply Alarm
    description: Power Supply Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tprn_temperature_alarm:
    name: Temperature Alarm
    description: Temperature Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_analogue_values_1_current_value:
    name: TSUN Analogue Values Temperature alarm High Threshold Current Value
    description: TSUN Analogue Values Temperature alarm High Threshold Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Temperature alarm High Threshold")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
        unit: C
  tsun_analogue_values_1_new_value:
    name: TSUN Analogue Values Temperature alarm High Threshold New Value
    description: TSUN Analogue Values Temperature alarm High Threshold New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Temperature alarm High Threshold")]/../td[3]/input/@value
      extractor: {}
    properties:
      readWrite: RW
      read:
        type: String
        unit: C
  tsun_analogue_values_1_range:
    name: TSUN Analogue Values Temperature alarm High Threshold Range
    description: TSUN Analogue Values Temperature alarm High Threshold Range
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Temperature alarm High Threshold")]/../td[4]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_analogue_values_2_current_value:
    name: TSUN Analogue Values Temperature Current Value
    description: TSUN Analogue Values Temperature Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Analog Values")]/../../tr[5]/td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
        unit: C
  tsun_analogue_values_2_new_value:
    name: TSUN Analogue Values Temperature New Value
    description: TSUN Analogue Values Temperature New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Analog Values")]/../../tr[5]/td[3]/input/@value
      extractor: {}
    properties:
      readWrite: RW
      read:
        type: String
        unit: C
  tsun_analogue_values_2_range:
    name: TSUN Analogue Values Temperature Range
    description: TSUN Analogue Values Temperature Range
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Analog Values")]/../../tr[5]/td[4]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_analogue_values_3_current_value:
    name: TSUN Analogue Values Main Power Voltage Current Value
    description: TSUN Analogue Values Main Power Voltage Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Main Power Voltage")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
        unit: C
  tsun_analogue_values_3_new_value:
    name: TSUN Analogue Values Main Power Voltage New Value
    description: TSUN Analogue Values Main Power Voltage New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Main Power Voltage")]/../td[3]/input/@value
      extractor: {}
    properties:
      readWrite: RW
      read:
        type: String
        unit: C
  tsun_analogue_values_3_range:
    name: TSUN Analogue Values Main Power Voltage Range
    description: TSUN Analogue Values Main Power Voltage Range
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Main Power Voltage")]/../td[4]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_inventory_description:
    name: TSUN Inventory Description
    description: TSUN Inventory Description
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[7]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_inventory_hardware_revision:
    name: TSUN Inventory Hardware Revision
    description: TSUN Inventory Hardware Revision
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[8]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_inventory_id_number:
    name: TSUN Inventory ID Number
    description: TSUN Inventory ID Number
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[3]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_inventory_manufacturer:
    name: TSUN Inventory Manufacturer
    description: TSUN Inventory Manufacturer
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[5]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_inventory_module_type:
    name: TSUN Inventory Module Type
    description: TSUN Inventory Module Type
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_inventory_production_year:
    name: TSUN Inventory Production Year
    description: TSUN Inventory Production Year
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[6]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_inventory_serial_number:
    name: TSUN Inventory Serial Number
    description: TSUN Inventory Serial Number
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[4]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_inventory_software_id:
    name: TSUN Inventory Software ID
    description: TSUN Inventory Software ID
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[9]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_inventory_software_version:
    name: TSUN Inventory Software Version
    description: TSUN Inventory Software Version
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[10]/text()
      extractor:
        filters:
          1: regexpReplace /^(\d+\.\d+)\.?.*$/ => $1
    properties:
      readWrite: R
      read:
        type: String
  tsun_inventory_unit_id:
    name: TSUN Inventory Unit ID
    description: TSUN Inventory Unit ID
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_inventory}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Inventory Data")]/../../tr[3]/td[1]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_parameters_1_current_value:
    name: TSUN Parameter OverTemperature PC ShutDown Current Value
    description: TSUN Parameter OverTemperature PC ShutDown Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "OverTemperature PC ShutDown")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_parameters_1_new_value:
    name: TSUN Parameter OverTemperature PC ShutDown New Value
    description: TSUN Parameter OverTemperature PC ShutDown New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "OverTemperature PC ShutDown")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_parameters_2_current_value:
    name: TSUN Parameter PC ShutDown On Key Press Current Value
    description: TSUN Parameter PC ShutDown On Key Press Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "PC ShutDown On Key Press")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_parameters_2_new_value:
    name: TSUN Parameter PC ShutDown On Key Press New Value
    description: TSUN Parameter PC ShutDown On Key Press New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "PC ShutDown On Key Press")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_parameters_3_current_value:
    name: TSUN Parameter OverTemperature Auto Reboot Current Value
    description: TSUN Parameter OverTemperature Auto Reboot Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "OverTemperature Auto Reboot")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_parameters_3_new_value:
    name: TSUN Parameter OverTemperature Auto Reboot New Value
    description: TSUN Parameter OverTemperature Auto Reboot New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "OverTemperature Auto Reboot")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_parameters_4_current_value:
    name: TSUN Parameter System Summary Alarm Current Value
    description: TSUN Parameter System Summary Alarm Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "System Summary Alarm")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_parameters_4_new_value:
    name: TSUN Parameter System Summary Alarm New Value
    description: TSUN Parameter System Summary Alarm New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "System Summary Alarm")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_parameters_5_current_value:
    name: TSUN Parameter PC Status Current Value
    description: TSUN Parameter PC Status Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "PC Status")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_parameters_5_new_value:
    name: TSUN Parameter PC Status New Value
    description: TSUN Parameter PC Status New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "PC Status")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_parameters_6_current_value:
    name: TSUN Parameter Turn PC ON Current Value
    description: TSUN Parameter Turn PC ON Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Turn PC ON")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_parameters_6_new_value:
    name: TSUN Parameter Turn PC ON New Value
    description: TSUN Parameter Turn PC ON New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "Turn PC ON")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_parameters_7_current_value:
    name: TSUN Parameter PC Watchdog Current Value
    description: TSUN Parameter PC Watchdog Current Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "PC Watchdog")]/../td[2]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  tsun_parameters_7_new_value:
    name: TSUN Parameter PC Watchdog New Value
    description: TSUN Parameter PC Watchdog New Value
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      dataSource: '%{resources.http.requests.get_tsun_parameters}'
      selector:
        type: xpath
        expression: //*[contains(text(), "PC Watchdog")]/../td[3]/select/option[@selected]/text()
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  ul_mimo_ch1_rf_alarm:
    name: UL MIMO CH1 RF Alarm
    description: UL MIMO CH1 RF Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  ul_mimo_ch2_rf_alarm:
    name: UL MIMO CH2 RF Alarm
    description: UL MIMO CH2 RF Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  ul_rf_alarm:
    name: UL RF Alarm
    description: UL RF Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
  vcc_alarm:
    name: Vcc Alarm
    description: Vcc Alarm
    conditions: {}
    attributes:
      dataEngine: '%{engines.upgraded-http}'
      selector:
        type: snmpTrap
        expression: ''
      extractor: {}
    properties:
      readWrite: R
      read:
        type: String
resources:
  auths:
    upgraded-http:
      http:
        httpUri: false
        actions:
          login:
            dataEngine: '%{engines.upgraded-http}'
            dataSource: '%{resources.http.requests.login}'
            selector:
              type: cookie
              expression: JSESSIONID
            dataSink: '%{resources.globals.auth.sessionId}'
          logout:
            dataEngine: '%{engines.upgraded-http}'
            dataSource: '%{resources.http.requests.logout}'
            selector:
              type: cookie
              expression: JSESSIONID
            dataSink: '%{resources.globals.auth.sessionId}'
  mappers:
    alarm_severity:
      keyType: String
      valueType: String
      map:
        sevCritical: Critical
        sevDisabled: Disabled
        sevMajor: Severe
        sevMinor: Severe
        sevOk: Normal
        sevWarning: Warning
  globals:
    auth:
      sessionId: 0
    reg:
      ip: ${registration.form.properties.ip}
      password: ${registration.vault.properties.password}
      port: ${registration.form.properties.port}
      url: http://${registration.form.properties.ip}:${registration.form.properties.port}
      username: ${registration.vault.properties.username}
  http:
    requests:
      get_alarm:
        uri: ${resources.globals.reg.url}/ION-M_V5.30.0/mmr/actalarms.jsp
        responseContentType: text/html
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      get_mc_status:
        uri: ${resources.globals.reg.url}/ION-M_V5.30.0/mmcplus/sum.jsp
        responseContentType: text/html
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      get_mc_unit_id:
        uri: ${resources.globals.reg.url}/ION-M_V5.30.0/mmr/location.jsp
        responseContentType: text/html
        query:
          addr: "0"
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      get_tfah_inventory:
        uri: ${resources.globals.reg.url}/ION-M_V5.30.0/ionb/ru/ionbhid.jsp
        responseContentType: text/html
        query:
          addr: ${topology.discovery.flatten.addr}
          addr_str: ${topology.discovery.flatten.unit_str}
          gui_str: ${topology.discovery.flatten.gui_str}
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      get_tfah_parameters:
        uri: ${resources.globals.reg.url}/ION-M_V5.30.0/ionb/ru/parameter.jsp
        responseContentType: text/html
        query:
          addr: ${topology.discovery.flatten.addr}
          addr_str: ${topology.discovery.flatten.unit_str}
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      get_tfah_unit_id:
        uri: ${resources.globals.reg.url}/ION-M_V5.30.0/ionb/ru/location.jsp
        responseContentType: text/html
        query:
          addr: ${topology.discovery.flatten.addr}
          addr_str: ${topology.discovery.flatten.unit_str}
          gui_str: ${topology.discovery.flatten.gui_str}
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      get_tfln_inventory:
        uri: ${resources.globals.reg.url}/ION-M_V5.30.0/ionb/lunit/ionbhid.jsp
        responseContentType: text/html
        query:
          addr: ${topology.discovery.flatten.addr}
          addr_str: ${topology.discovery.flatten.unit_str}
          gui_str: ${topology.discovery.flatten.gui_str}
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      get_tfln_parameters:
        uri: ${resources.globals.reg.url}/ION-M_V5.30.0/ionb/lunit/parameter.jsp
        responseContentType: text/html
        query:
          addr: ${topology.discovery.flatten.addr}
          addr_str: ${topology.discovery.flatten.unit_str}
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      get_tpoi_inventory:
        uri: ${resources.globals.reg.url}/ION-M_V5.30.0/ionb/lunit/ionbhid.jsp
        responseContentType: text/html
        query:
          addr: ${topology.discovery.flatten.addr}
          addr_str: ${topology.discovery.flatten.unit_str}
          gui_str: ${topology.discovery.flatten.gui_str}
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      get_tpoi_parameters:
        uri: ${resources.globals.reg.url}/ION-M_V5.30.0/ionb/lunit/parameter.jsp
        responseContentType: text/html
        query:
          addr: ${topology.discovery.flatten.addr}
          addr_str: ${topology.discovery.flatten.unit_str}
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      get_tprn_inventory:
        uri: ${resources.globals.reg.url}/ION-M_V5.30.0/ionb/sr/ionbhid.jsp
        responseContentType: text/html
        query:
          addr: ${topology.discovery.flatten.addr}
          addr_str: ${topology.discovery.flatten.unit_str}
          gui_str: ${topology.discovery.flatten.gui_str}
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      get_tprn_parameters:
        uri: ${resources.globals.reg.url}/ION-M_V5.30.0/ionb/sr/parameter.jsp
        responseContentType: text/html
        query:
          addr: ${topology.discovery.flatten.addr}
          addr_str: ${topology.discovery.flatten.unit_str}
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      get_tree:
        uri: ${resources.globals.reg.url}/ION-M_V5.30.0/tigratree/1orgItems.js
        responseContentType: text/javascript
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      get_tsun_inventory:
        uri: ${resources.globals.reg.url}/ION-M_V5.30.0/ionb/lunit/ionbhid.jsp
        responseContentType: text/html
        query:
          addr: ${topology.discovery.flatten.addr}
          addr_str: ${topology.discovery.flatten.unit_str}
          gui_str: ${topology.discovery.flatten.gui_str}
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      get_tsun_parameters:
        uri: ${resources.globals.reg.url}/ION-M_V5.30.0/ionb/lunit/parameter.jsp
        responseContentType: text/html
        query:
          addr: ${topology.discovery.flatten.addr}
          addr_str: ${topology.discovery.flatten.unit_str}
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      login:
        method: POST
        uri: ${resources.globals.reg.url}/ION-M_V5.30.0/index.jsp
        requestContentType: application/x-www-form-urlencoded
        responseContentType: text/html
        body:
          login: login
          loginTimeDiff: -330
          loginname: ${resources.globals.reg.username}
          loginpwrd: ${resources.globals.reg.password}
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      logout:
        method: POST
        uri: ${resources.globals.reg.url}/ION-M_V5.30.0/logout.jsp
        requestContentType: application/x-www-form-urlencoded
        responseContentType: text/html
        body:
          logout: logout
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
