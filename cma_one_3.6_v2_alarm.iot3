iot3: 2.0.0
info:
  name: '[Compact] Corning ONE'
  oem: Corning
  model: ONE
  versions:
    - "3.6"
  author: Kiara L'Herpiniere <support@qeleo.com>
  stage: alpha
  revision: 3
  labels:
    - compact
    - corning
    - one
    - "3.6"
    - auto upgraded to v2
  created: "2021-07-20"
  updated: "2022-11-18"
  documentation:
    description: This IoT3 file supports the Corning ONE 3.6 systems.
registration:
  vaultId: vault_id
  fingerprint:
    - scheme
    - ip
    - port
    - vault_id
  vault:
    properties:
      group:
        description: The Group is not used yet but should be specified for future use
        key: group
        placeholder: Group
        title: Group
        type: string
      group_id:
        description: The Group ID needs to be replaced by the group name and a call to convert name to ID to be made
        inputType: number
        key: group_id
        placeholder: Group ID
        title: Group ID
        type: number
      password:
        key: password
        placeholder: Password
        required: true
        title: Password
        type: string
      username:
        key: username
        placeholder: Username
        required: true
        title: Username
        type: string
    required:
      - username
      - password
      - group
      - group_id
  form:
    properties:
      ip:
        key: ip
        placeholder: IP Address
        required: true
        title: IP
        type: string
      port:
        inputType: number
        key: port
        maximum: 65535
        minimum: 0
        placeholder: Port
        required: true
        title: Port
        type: number
      scheme:
        enum:
          - http
          - https
        inputType: dropdown
        title: Scheme
        type: string
      vault_id:
        key: vault_id
        pattern: ^(cu\w{6})(-av\w{6})$
        placeholder: Vault ID
        required: true
        title: Vault ID
        type: string
    required:
      - scheme
      - ip
      - port
      - vault_id
engines:
  tunnel:
    ssh:
      supported: false
    http:
      supported: true
      port: 443
      displayInstructions:
        protocol: HTTPS
  snmp_trap:
    schedule: '@never'
    auth: '%{resources.auths.upgraded-snmp}'
    type: SNMP
    emulate: false
    options:
  upgraded-http:
    schedule: '@always'
    auth: '%{resources.auths.upgraded-http}'
    type: HTTP
    options:
      tlsHandshakeTimeout: 1m
      responseHeaderTimeout: 1m
      tls:
        minVersion: "1.0"
topology:
  rootType: hcm
  verify:
    - dataEngine: '%{engines.upgraded-http}'
      selector:
        type: ""
        expression: ""
      match: ""
  nodes: true
  discovery:
    dataEngine: '%{engines.upgraded-http}'
    dataSource: '%{resources.http.requests.get_tree}'
    type: http
    selectors:
      nodes:
        dataEngine: '%{engines.upgraded-http}'
        selector:
          type: xpath
          expression: //tree/(acmTable,oimTable,rimTable,dimTable,rauTable,rxuTable,fmmTable,mruTable,bleTable)/*[deviceType]
    flatten:
      type:
        transform: ${topology.discovery.selectors.nodes}
        filters:
          1: xpath //deviceTypeName/text()
          2: toLower
          3: regexpReplace /(\d+|-.+)$/ => ''
      topology:
        transform: ${topology.discovery.selectors.nodes}
        filters:
          1: xpath //deviceTypeName/text()
          2: regexpReplace /(\d+|-.+)$/ => ''
          4: use %{0}
          5: xpath //chasissType/text()
          6: toLower
          7: use %{0}
          8: xpath //cInx/text()
          9: use %{0}
          10: xpath //sInx/text()
          11: use %{0}
          12: xpath //pInx/text()
          13: use %{0}
          14: xpath //rInx/text()
          15: |
            switch
            "%{2}" == "ACM" : "'hcm' -> 'site' -> '%{6} [%{8}]' -> 'acm [%{10}]'"
            "%{2}" == "FMM" : "'hcm' -> 'site' -> '%{6} [%{8}]' -> 'fmm [%{10}]'"
            "%{2}" == "RIM" : "'hcm' -> 'site' -> 'heu [%{8}]' -> 'rim [%{10}]'"
            "%{2}" == "OIM" : "'hcm' -> 'site' -> 'oiu [%{8}]' -> 'oim [%{10}]'"
            "%{2}" == "RAU" : "'hcm' -> 'site' -> 'oiu [%{8}]' -> 'oim [%{10}]' -> 'rau [%{12}]'"
            "%{2}" == "RXU" : "'hcm' -> 'site' -> 'oiu [%{8}]' -> 'oim [%{10}]' -> 'rau [%{12}]' -> 'rxu [%{14}]'"
            default:             "'hcm'"
      version:
        transform: ${topology.discovery.selectors.nodes}
        filters:
          1: xpath //deviceTypeName/text()
          2: regexpReplace /(\d+|-.+)$/ => ''
          3: |
            switch
            "%{1}" == "HCM" : "2.2"
            "%{1}" ~= "ACM" : "22.11"
            "%{1}" ~= "OIM" : "22.05"
            "%{1}" ~= "RIM" : "22.02"
            "%{1}" ~= "RAU" : "22.13"

            "%{1}" == "RXU" : "22.02"
            "%{1}" ~= "FMM" : "04.09"
            default:"0.0"
      cInx:
        transform: ${topology.discovery.selectors.nodes}
        filters:
          1: xpath //cInx/text()
      chassisType:
        transform: ${topology.discovery.selectors.nodes}
        filters:
          1: xpath //chasissType/text()
          2: toLower
          3: regexpReplace /^\$.+/ => ''
      deviceNumber:
        transform: ${topology.discovery.selectors.nodes}
        filters:
          1: xpath //deviceType/text()
      pInx:
        transform: ${topology.discovery.selectors.nodes}
        filters:
          1: xpath //pInx/text()
      rInx:
        transform: ${topology.discovery.selectors.nodes.}
        filters:
          1: xpath //rInx/text()
      sInx:
        transform: ${topology.discovery.selectors.nodes}
        filters:
          1: xpath //sInx/text()
types:
  acm:
    name: ACM
    version: '[0.1,)'
    reference: acm
    attributes:
    alarms:
      acm_over_temperature_alarm:
        attributes:
          - acm_over_temperature_alarm_set
          - acm_over_temperature_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      acm_power_failure_alarm:
        attributes:
          - acm_power_failure_alarm_set
          - acm_power_failure_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      #These alarms are present in MIB but not present in a file
       acm_psma_over_temperature_alarm:
        attributes: 
          - acm_psma_over_temperature_alarm_set
          - acm_psma_over_temperature_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
       acm_psmb_over_temperature_alarm:
        attributes:
          - acm_psmb_over_temperature_alarm_set
          - acm_psmb_over_temperature_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
       acm_psma_output_under_voltage_alarm:
        attributes:
          - acm_psma_output_under_voltage_alarm_set
          - acm_psma_output_under_voltage_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
       acm_psmb_output_under_voltage_alarm:
        attributes:
          - acm_psmb_output_under_voltage_alarm_set
          - acm_psmb_output_under_voltage_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
       acm_ext1_clock_down_alarm:
        attributes:
          - acm_ext1_clock_down_alarm_set
          - acm_ext1_clock_down_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
       acm_ext2_clock_down_alarm:
        attributes:
          - acm_ext2_clock_down_alarm_set
          - acm_ext2_clock_down_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
       acm_pilot_clock_down_alarm:
        attributes:
          - acm_pilot_clock_down_alarm_set
          - acm_pilot_clock_down_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
       acm_psma_input_under_voltage_alarm:
        attributes:
          - acm_psma_input_under_voltage_alarm_set
          - acm_psma_input_under_voltage_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
       acm_psmb_input_under_voltage_alarm:
        attributes:
          - acm_psmb_input_under_voltage_alarm_set
          - acm_psmb_input_under_voltage_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
       acm_fam_failure_alarm:
        attributes:
          - acm_fam_failure_alarm_set
          - acm_fam_failure_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
    price:
      value: 0
      unit: USD
    energy:
      value: 0
      unit: W
  fmm:
    name: FMM
    version: '[0.1,)'
    reference: fmm
    attributes:
    alarms:
      fmm_over_temperature_alarm:
        attributes:
          - fmm_over_temperature_alarm_set
          - fmm_over_temperature_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      fmm_clock_reference_cutting_alarm:
        attributes:
          - fmm_clock_reference_cutting_alarm_set
          - fmm_clock_reference_cutting_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      fmm_optical_power_low_alarm:
        attributes:
          - fmm_optical_power_low_alarm_set
          - fmm_optical_power_low_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      #These alarms are present in MIB but not present in a file
      fmm_mng_optical_loss_alarm:
        attributes:
          - fmm_mng_optical_loss_alarm_set
          - fmm_mng_optical_loss_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
    price:
      value: 0
      unit: USD
    energy:
      value: 0
      unit: W
  hcm:
    name: HCM
    version: '[0.1,)'
    reference: hcm
    attributes:
    alarms:
      #These alarms are present in MIB but not present in a file
      version_mismatch_alarm:
        attributes:
          - version_mismatch_alarm_set
          - version_mismatch_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      module_adjustment_fault_alarm:
        attributes:
          - module_adjustment_fault_alarm_set
          - module_adjustment_fault_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      hw_failure_alarm:
        attributes:
          - hw_failure_alarm_set
          - hw_failure_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      adjust_fault_alarm:
        attributes:
          - adjust_fault_alarm_set
          - adjust_fault_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      install_fault_alarm:
        attributes:
          - install_fault_alarm_set
          - install_fault_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      release_mismatch_alarm:
        attributes:
          - release_mismatch_alarm_set
          - release_mismatch_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      connectivity_alarm:
        attributes:
          - connectivity_alarm_set
          - connectivity_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
    price:
      value: 0
      unit: USD
    energy:
      value: 0
      unit: W
  heu:
    name: HEU
    version: '[0.1,)'
    reference: heu
    price:
      value: 0
      unit: USD
    energy:
      value: 0
      unit: W
  ihu:
    name: IHU
    version: '[0.1,)'
    reference: ihu
    price:
      value: 0
      unit: USD
    energy:
      value: 0
      unit: W
  oim:
    name: OIM
    version: '[0.1,)'
    reference: oim
    attributes:
    alarms:
      oim_optical_power_low_alarm:
        attributes:
          - oim_optical_power_low_alarm_set
          - oim_optical_power_low_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      oim_optical_loss_alarm:
        attributes:
          - oim_optical_loss_alarm_set
          - oim_optical_loss_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      oim_over_temperature_alarm:
        attributes:
          - oim_over_temperature_alarm_set
          - oim_over_temperature_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
    price:
      value: 0
      unit: USD
    energy:
      value: 0
      unit: W
  oiu:
    name: OIU
    version: '[0.1,)'
    reference: oiu
    price:
      value: 0
      unit: USD
    energy:
      value: 0
      unit: W
  rau:
    name: RAU
    version: '[0.1,)'
    reference: rau
    attributes:
    alarms:
      rau_over_temperature_alarm:
        attributes:
          - rau_over_temperature_alarm_set
          - rau_over_temperature_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      #These alarms are present in MIB but not present in a file
      rau_rf_low_power_alarm:
        attributes:
          - rau_rf_low_power_alarm_set
          - rau_rf_low_power_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rau_ul_over_power_alarm:
        attributes:
          - rau_ul_over_power_alarm_set
          - rau_ul_over_power_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rau_service_off_alarm:
        attributes:
          - rau_service_off_alarm_set
          - rau_service_off_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rau_antenna_disconnect_alarm:
        attributes:
          - rau_antenna_disconnect_alarm_set
          - rau_antenna_disconnect_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rau_listening_over_power_alarm:
        attributes:
          - rau_listening_over_power_alarm_set
          - rau_listening_over_power_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rau_power_supply_alarm:
        attributes:
          - rau_power_supply_alarm_set
          - rau_power_supply_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
    price:
      value: 0
      unit: USD
    energy:
      value: 0
      unit: W
  rim:
    name: RIM
    version: '[0.1,)'
    reference: rim
    attributes:
    alarms:
      rim_service_off_alarm:
        attributes:
          - rim_service_off_alarm_set
          - rim_service_off_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rim_output_power_alarm:
        attributes:
          - rim_output_power_alarm_set
          - rim_output_power_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rim_over_temperature_alarm:
        attributes:
          - rim_over_temperature_alarm_set
          - rim_over_temperature_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      #These alarms are present in MIB but not present in a file
      rim_dl_rf_low_power_alarm:
        attributes:
          - rim_dl_rf_low_power_alarm_set
          - rim_dl_rf_low_power_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rim_dl_over_power_alarm:
        attributes:
          - rim_dl_over_power_alarm_set
          - rim_dl_over_power_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rim_dl_damage_power_alarm:
        attributes:
          - rim_dl_damage_power_alarm_set
          - rim_dl_damage_power_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rim_tdd_sync_loss_alarm:
        attributes:
          - rim_tdd_sync_loss_alarm_set
          - rim_tdd_sync_loss_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rim_AWS_mix_connection_alarm:
        attributes:
          - rim_AWS_mix_connection_alarm_set
          - rim_AWS_mix_connection_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rim_ul_synthesizer_unlocked_alarm:
        attributes:
          - rim_ul_synthesizer_unlocked_alarm_set
          - rim_ul_synthesizer_unlocked_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rim_dl_synthesizer_unlocked_alarm:
        attributes:
          - rim_dl_synthesizer_unlocked_alarm_set
          - rim_dl_synthesizer_unlocked_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rim_reference_clock_unlocked_alarm:
        attributes:
          - rim_reference_clock_unlocked_alarm_set
          - rim_reference_clock_unlocked_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
    price:
      value: 0
      unit: USD
    energy:
      value: 0
      unit: W
  site:
    name: Site
    version: '[0.1,)'
    reference: site
    attributes:
    alarms:
      site_alarm_connectivity_alarm:
        attributes:
          - site_alarm_connectivity_alarm_set
          - site_alarm_connectivity_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      #These alarms are present in MIB but not present in a file
      site_adjust_fault_alarm:
        attributes:
          - site_adjust_fault_alarm_set
          - site_adjust_fault_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      site_release_mismatch_alarm:
        attributes:
          - site_release_mismatch_alarm_set
          - site_release_mismatch_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      #Add this alarms in wrapper type
      #RXU
      rxu_rf_low_alarm:
        attributes:
          - rxu_rf_low_alarm_set
          - rxu_rf_low_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rxu_ul_over_power_alarm:
        attributes:
          - rxu_ul_over_power_alarm_set
          - rxu_ul_over_power_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rxu_service_off_alarm:
        attributes:
          - rxu_service_off_alarm_set
          - rxu_service_off_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rxu_over_temperature_alarm:
        attributes:
          - rxu_over_temperature_alarm_set
          - rxu_over_temperature_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rxu_antenna_disconnect_alarm:
        attributes:
          - rxu_antenna_disconnect_alarm_set
          - rxu_antenna_disconnect_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rxu_synth_unlock_alarm:
        attributes:
          - rxu_synth_unlock_alarm_set
          - rxu_synth_unlock_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rxu_dl_synth_unlock_alarm:
        attributes:
          - rxu_dl_synth_unlock_alarm_set
          - rxu_dl_synth_unlock_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rxu_ul_synth_unlock_alarm:
        attributes:
          - rxu_ul_synth_unlock_alarm_set
          - rxu_ul_synth_unlock_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rxu_tdd_sync_loss_alarm:
        attributes:
          - rxu_tdd_sync_loss_alarm_set
          - rxu_tdd_sync_loss_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rxu_67_power_fail_alarm:
        attributes:
          - rxu_67_power_fail_alarm_set
          - rxu_67_power_fail_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rxu_67_hw_fail_alarm:
        attributes:
          - rxu_67_hw_fail_alarm_set
          - rxu_67_hw_fail_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rxu_67_over_temperature_alarm:
        attributes:
          - rxu_67_over_temperature_alarm_set
          - rxu_67_over_temperature_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rxu_67_dl_out_pwr_low_alarm:
        attributes:
          - rxu_67_dl_out_pwr_low_alarm_set
          - rxu_67_dl_out_pwr_low_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rxu_67_ul_in_pwr_high_alarm:
        attributes:
          - rxu_67_ul_in_pwr_high_alarm_set
          - rxu_67_ul_in_pwr_high_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      rxu_67_service_off_alarm:
        attributes:
          - rxu_67_service_off_alarm_set
          - rxu_67_service_off_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      #MRU
      mru_rf_low_power_alarm:
        attributes:
          - mru_rf_low_power_alarm_set
          - mru_rf_low_power_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mru_ul_over_power_alarm:
        attributes:
          - mru_ul_over_power_alarm_set
          - mru_ul_over_power_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mru_service_off_alarm:
        attributes:
          - mru_service_off_alarm_set
          - mru_service_off_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mru_over_temperature_alarm:
        attributes:
          - mru_over_temperature_alarm_set
          - mru_over_temperature_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mru_fam_velo_city_alarm:
        attributes:
          - mru_fam_velo_city_alarm_set
          - mru_fam_velo_city_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mru_vswr_alarm:
        attributes:
          - mru_vswr_alarm_set
          - mru_vswr_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mru_module_shutdown_alarm:
        attributes:
          - mru_module_shutdown_alarm_set
          - mru_module_shutdown_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mru_module_permanent_shutdown_alarm:
        attributes:
          - mru_module_permanent_shutdown_alarm_set
          - mru_module_permanent_shutdown_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mru_module_over_temperature_alarm:
        attributes:
          - mru_module_over_temperature_alarm_set
          - mru_module_over_temperature_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mru_module_out_of_slot_alarm:
        attributes:
          - mru_module_out_of_slot_alarm_set
          - mru_module_out_of_slot_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mru_door_open_alarm:
        attributes:
          - mru_door_open_alarm_set
          - mru_door_open_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mru_over_temperature_when_door_open_alarm:
        attributes:
          - mru_over_temperature_when_door_open_alarm_set
          - mru_over_temperature_when_door_open_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mru_power_supply_alarm:
        attributes:
          - mru_power_supply_alarm_set
          - mru_power_supply_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mru_low_optic_alarm:
        attributes:
          - mru_low_optic_alarm_set
          - mru_low_optic_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mru_optm_over_temperature_alarm:
        attributes:
          - mru_optm_over_temperature_alarm_set
          - mru_optm_over_temperature_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mru_cabinet_door_alarm:
        attributes:
          - mru_cabinet_door_alarm_set
          - mru_cabinet_door_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mru_heat_exchanger_failure_alarm:
        attributes:
          - mru_heat_exchanger_failure_alarm_set
          - mru_heat_exchanger_failure_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mru_module_over_power_alarm:
        attributes:
          - mru_module_over_power_alarm_set
          - mru_module_over_power_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      #DIM
      dim_service_off_alarm:
        attributes:
          - dim_service_off_alarm_set
          - dim_service_off_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      dim_over_temperature_alarm:
        attributes:
          - dim_over_temperature_alarm_set
          - dim_over_temperature_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      dim_local_los_port_alarm:
        attributes:
          - dim_local_los_port_alarm_set
          - dim_local_los_port_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      dim_local_lof_port_alarm:
        attributes:
          - dim_local_lof_port_alarm_set
          - dim_local_lof_port_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      dim_local_rai_port_alarm:
        attributes:
          - dim_local_rai_port_alarm_set
          - dim_local_rai_port_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      dim_remote_los_port_alarm:
        attributes:
          - dim_remote_los_port_alarm_set
          - dim_remote_los_port_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      dim_remote_lof_port_alarm:
        attributes:
          - dim_remote_lof_port_alarm_set
          - dim_remote_lof_port_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      dim_AWS_mix_connection_alarm:
        attributes:
          - dim_AWS_mix_connection_alarm_set
          - dim_AWS_mix_connection_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      #LAU
      lau_ble_service_off_alarm:
        attributes:
          - lau_ble_service_off_alarm_set
          - lau_ble_service_off_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      lau_wifi_service_off_alarm:
        attributes:
          - lau_wifi_service_off_alarm_set
          - lau_wifi_service_off_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      lau_over_temperature_alarm:
        attributes:
          - lau_over_temperature_alarm_set
          - lau_over_temperature_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      lau_e911_missing_info_alarm:
        attributes:
          - lau_e911_missing_info_alarm_set
          - lau_e911_missing_info_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      #OCH
      och_if_card_com_alarm:
        attributes:
          - och_if_card_com_alarm_set
          - och_if_card_com_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      och_optical_adjust_alarm:
        attributes:
          - och_optical_adjust_alarm_set
          - och_optical_adjust_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      och_optical_link_failed_alarm:
        attributes:
          - och_optical_link_failed_alarm_set
          - och_optical_link_failed_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      och_mismatch_alarm:
        attributes:
          - och_mismatch_alarm_set
          - och_mismatch_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      #GX
      gx_over_temperature_alarm:
        attributes:
          - gx_over_temperature_alarm_set
          - gx_over_temperature_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      gx_open_door_alarm:
        attributes:
          - gx_open_door_alarm_set
          - gx_open_door_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      gx_optical_alarm_alarm:
        attributes:
          - gx_optical_alarm_alarm_set
          - gx_optical_alarm_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      gx_fans_faulty_alarm:
        attributes:
          - gx_fans_faulty_alarm_set
          - gx_fans_faulty_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      gx_dl_pa_alarm:
        attributes:
          - gx_dl_pa_alarm_set
          - gx_dl_pa_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      gx_dl_low_alarm:
        attributes:
          - gx_dl_low_alarm_set
          - gx_dl_low_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      gx_dl_high_alarm:
        attributes:
          - gx_dl_high_alarm_set
          - gx_dl_high_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      gx_alc_fail_alarm:
        attributes:
          - gx_alc_fail_alarm_set
          - gx_alc_fail_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      gx_vswr_alarm:
        attributes:
          - gx_vswr_alarm_set
          - gx_vswr_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      gx_service_off_alarm:
        attributes:
          - gx_service_off_alarm_set
          - gx_service_off_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      gx_adjustment_fault_alarm:
        attributes:
          - gx_adjustment_fault_alarm_set
          - gx_adjustment_fault_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      gx_ul_lna_alarm:
        attributes:
          - gx_ul_lna_alarm_set
          - gx_ul_lna_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      gx_external_alarm_1_alarm:
        attributes:
          - gx_external_alarm_1_alarm_set
          - gx_external_alarm_1_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      gx_external_alarm_2_alarm:
        attributes:
          - gx_external_alarm_2_alarm_set
          - gx_external_alarm_2_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      gx_external_alarm_3_alarm:
        attributes:
          - gx_external_alarm_3_alarm_set
          - gx_external_alarm_3_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      gx_external_alarm_4_alarm:
        attributes:
          - gx_external_alarm_4_alarm_set
          - gx_external_alarm_4_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      gx_if_lo_unlocked_alarm:
        attributes:
          - gx_if_lo_unlocked_alarm_set
          - gx_if_lo_unlocked_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      gx_pilot_low_alarm:
        attributes:
          - gx_pilot_low_alarm_set
          - gx_pilot_low_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      gx_tsync_alarm:
        attributes:
          - gx_tsync_alarm_set
          - gx_tsync_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      #MXU
      mxu_over_temperature_alarm:
        attributes:
          - mxu_over_temperature_alarm_set
          - mxu_over_temperature_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mxu_synthesizer_clock_alarm:
        attributes:
          - mxu_synthesizer_clock_alarm_set
          - mxu_synthesizer_clock_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mxu_syn_closs_alarm:
        attributes:
          - mxu_syn_closs_alarm_set
          - mxu_syn_closs_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mxu_rf_connectivity_alarm:
        attributes:
          - mxu_rf_connectivity_alarm_set
          - mxu_rf_connectivity_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mxu_dl_out_pwr_low_alarm:
        attributes:
          - mxu_dl_out_pwr_low_alarm_set
          - mxu_dl_out_pwr_low_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mxu_ul_in_pwr_high_alarm:
        attributes:
          - mxu_ul_in_pwr_high_alarm_set
          - mxu_ul_in_pwr_high_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mxu_service_off_alarm:
        attributes:
          - mxu_service_off_alarm_set
          - mxu_service_off_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mxu_pa_vswr_alarm:
        attributes:
          - mxu_pa_vswr_alarm_set
          - mxu_pa_vswr_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mxu_pa_shut_down_alarm:
        attributes:
          - mxu_pa_shut_down_alarm_set
          - mxu_pa_shut_down_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mxu_pa_permanent_shut_down_alarm:
        attributes:
          - mxu_pa_permanent_shut_down_alarm_set
          - mxu_pa_permanent_shut_down_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mxu_pa_over_temperature_alarm:
        attributes:
          - mxu_pa_over_temperature_alarm_set
          - mxu_pa_over_temperature_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mxu_pa_over_power_alarm:
        attributes:
          - mxu_pa_over_power_alarm_set
          - mxu_pa_over_power_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mxu_power_supply_alarm:
        attributes:
          - mxu_power_supply_alarm_set
          - mxu_power_supply_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mxu_dl_synthesize_run_locked_alarm:
        attributes:
          - mxu_dl_synthesize_run_locked_alarm_set
          - mxu_dl_synthesize_run_locked_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
      mxu_ul_synthesizer_unlocked_alarm:
        attributes:
          - mxu_ul_synthesizer_unlocked_alarm_set
          - mxu_ul_synthesizer_unlocked_alarm_clear
        mapper: '%{resources.mappers.some_alarm_severity}'
    price:
      value: 0
      unit: USD
    energy:
      value: 0
      unit: W
attributes:
  version_mismatch_alarm_set:
    name: Version Mismatch Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.602" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "9"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  version_mismatch_alarm_clear:
    name: Version Mismatch Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.603" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "9"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  module_adjustment_fault_alarm_set:
    name: Module Adjustment Fault Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.602" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "9"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  module_adjustment_fault_alarm_clear:
    name: Module Adjustment Fault Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.603" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "9"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  hw_failure_alarm_set:
    name: HW Failure Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.602" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "9"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  hw_failure_alarm_clear:
    name: HW Failure Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.603" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "9"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  adjust_fault_alarm_set:
    name: Adjust Fault Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.602" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "9"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  adjust_fault_alarm_clear:
    name: Adjust Fault Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.603" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "9"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  install_fault_alarm_set:
    name: Install Fault Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.602" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "9"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  install_fault_alarm_clear:
    name: Install Fault Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.603" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "9"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  release_mismatch_alarm_set:
    name: Release Mismatch Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.602" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "9"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  release_mismatch_alarm_clear:
    name: Release Mismatch Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.603" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "9"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  connectivity_alarm_set:
    name: Connectivity Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.602" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "9"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  connectivity_alarm_clear:
    name: Connectivity Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.603" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "9"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  acm_over_temperature_alarm_set:
    name: ACM Over Temperature Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.102" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  acm_over_temperature_alarm_clear:
    name: ACM Over Temperature Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.103" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  acm_power_failure_alarm_set:
    name: ACM Power Failure Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.126" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  acm_power_failure_alarm_clear:
    name: ACM Power Failure Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.127" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  acm_psma_over_temperature_alarm_set:
    name: ACM PSMA Over Temperature Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.100" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  acm_psma_over_temperature_alarm_clear:
    name: ACM PSMA Over Temperature Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.101" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {} 
  acm_psmb_over_temperature_alarm_set:
    name: ACM PSMB Over Temperature Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.104" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  acm_psmb_over_temperature_alarm_clear:
    name: ACM PSMB Over Temperature Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.105" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}  
  acm_psma_output_under_voltage_alarm_set:
    name: ACM PSMA Output Under Voltage Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.108" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  acm_psma_output_under_voltage_alarm_clear:
    name: ACM PSMA Output Under Voltage Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.109" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}   
  acm_psmb_output_under_voltage_alarm_set:
    name: ACM PSMB Output Under Voltage Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.110" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  acm_psmb_output_under_voltage_alarm_clear:
    name: ACM PSMB Output Under Voltage Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.111" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}       
  acm_ext1_clock_down_alarm_set:
    name: ACM External 1 Clock Down Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.114" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  acm_ext1_clock_down_alarm_clear:
    name: ACM External 1 Clock Down Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.115" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}       
  acm_ext2_clock_down_alarm_set:
    name: ACM External 2 Clock Down Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.116" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  acm_ext2_clock_down_alarm_clear:
    name: ACM External 2 Clock Down Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.117" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}      
  acm_pilot_clock_down_alarm_set:
    name: ACM Pilot Clock Down Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.118" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  acm_pilot_clock_down_alarm_clear:
    name: ACM Pilot Clock Down Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.119" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}       
  acm_psma_input_under_voltage_alarm_set:
    name: ACM PSMA Input Under Voltage Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.120" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  acm_psma_input_under_voltage_alarm_clear:
    name: ACM PSMA Input Under Voltage Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.121" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}         
  acm_psmb_input_under_voltage_alarm_set:
    name: ACM PSMB Input Under Voltage Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.122" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  acm_psmb_input_under_voltage_alarm_clear:
    name: ACM PSMB Input Under Voltage Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.123" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}        
  acm_fam_failure_alarm_set:
    name: ACM Fam Failure Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.128" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  acm_fam_failure_alarm_clear:
    name: ACM Fam Failure Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.129" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "2"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}    
  fmm_over_temperature_alarm_set:
    name: FMM Over Temperature Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.604" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "9"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  fmm_over_temperature_alarm_clear:
    name: FMM Over Temperature Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.605" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "9"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  fmm_clock_reference_cutting_alarm_set:
    name: FMM Clock Reference Cutting Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.608" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "9"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  fmm_clock_reference_cutting_alarm_clear:
    name: FMM Clock Reference Cutting Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.609" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "9"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  fmm_optical_power_low_alarm_set:
    name: FMM Optical Power Low Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.602" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "9"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  fmm_optical_power_low_alarm_clear:
    name: FMM Optical Power Low Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.603" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "9"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  fmm_mng_optical_loss_alarm_set:
    name: FMM Management Optical Loss Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.610" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "9"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  fmm_mng_optical_loss_alarm_clear:
    name: FMM Management Optical Loss Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.611" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "9"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  oim_optical_power_low_alarm_set:
    name: OIM Optical Power Low Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.302" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "4"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  oim_optical_power_low_alarm_clear:
    name: OIM Optical Power Low Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.303" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "4"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  oim_optical_loss_alarm_set:
    name: OIM Optical Loss Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.306" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "4"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  oim_optical_loss_alarm_clear:
    name: OIM Optical Loss Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.307" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "4"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  oim_over_temperature_alarm_set:
    name: OIM Over Temperature Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.304" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "4"'
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  oim_over_temperature_alarm_clear:
    name: OIM Over Temperature Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.305" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "4"' 
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rau_over_temperature_alarm_set:
    name: RAU Over Temperature Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.408" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "5"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rau_over_temperature_alarm_clear:
    name: RAU Over Temperature Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.409" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "5"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rau_rf_low_power_alarm_set:
    name: RAU RF Low Power Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.400" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "5"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rau_rf_low_power_alarm_clear:
    name: RAU RF Low Power Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.401" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "5"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rau_ul_over_power_alarm_set:
    name: RAU UL Over Power Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.402" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "5"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rau_ul_over_power_alarm_clear:
    name: RAU UL Over Power Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.403" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "5"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rau_service_off_alarm_set:
    name: RAU Service Off Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.404" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "5"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rau_service_off_alarm_clear:
    name: RAU Service Off Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.405" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "5"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rau_antenna_disconnect_alarm_set:
    name: RAU Antenna Disconnect Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.410" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "5"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rau_antenna_disconnect_alarm_clear:
    name: RAU Antenna Disconnect Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.411" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "5"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rau_listening_over_power_alarm_set:
    name: RAU Listening Over Power Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.412" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "5"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rau_listening_over_power_alarm_clear:
    name: RAU Listening Over Power Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.413" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "5"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rau_power_supply_alarm_set:
    name: RAU Power Supply Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.414" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "5"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rau_power_supply_alarm_clear:
    name: RAU Power Supply Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.415" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "5"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rim_service_off_alarm_set:
    name: RIM Service Off Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.204" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rim_service_off_alarm_clear:
    name: RIM Service Off Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.205" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rim_output_power_alarm_set:
    name: RIM Output Power Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.210" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rim_output_power_alarm_clear:
    name: RIM Output Power Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.211" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rim_over_temperature_alarm_set:
    name: RIM Over Temperature Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.208" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rim_over_temperature_alarm_clear:
    name: RIM Over Temperature Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.209" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  site_alarm_connectivity_alarm_set:
    name: Site Connectivity Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.706" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "11"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rim_dl_rf_low_power_alarm_set:
    name: RIM DL RF Low Power Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.200" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rim_dl_rf_low_power_alarm_clear:
    name: RIM DL RF Low Power Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.201" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rim_dl_over_power_alarm_set:
    name: RIM DL Over Power Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.202" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rim_dl_over_power_alarm_clear:
    name: RIM DL Over Power Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.203" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rim_dl_damage_power_alarm_set:
    name: RIM DL Damage Power Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.206" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rim_dl_damage_power_alarm_clear:
    name: RIM DL Damage Power Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.207" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rim_tdd_sync_loss_alarm_set:
    name: RIM TDD Sync Loss Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.212" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rim_tdd_sync_loss_alarm_clear:
    name: RIM TDD Sync Loss Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.213" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rim_AWS_mix_connection_alarm_set:
    name: RIM AWS MIX Connection Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.214" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rim_AWS_mix_connection_alarm_clear:
    name: RIM AWS MIX Connection Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.215" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rim_ul_synthesizer_unlocked_alarm_set:
    name: RIM UL Synthesizer Unlocked Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.250" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rim_ul_synthesizer_unlocked_alarm_clear:
    name: RIM UL Synthesizer Unlocked Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.251" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rim_dl_synthesizer_unlocked_alarm_set:
    name: RIM DL Synthesizer Unlocked Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.252" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rim_dl_synthesizer_unlocked_alarm_clear:
    name: RIM DL Synthesizer Unlocked Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.253" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rim_reference_clock_unlocked_alarm_set:
    name: RIM Reference Clock Unlocked Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.254" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rim_reference_clock_unlocked_alarm_clear:
    name: RIM Reference Clock Unlocked Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.255" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  #Consider above attributes in wrapper type      
  rxu_rf_low_alarm_set:
    name: RXU RF Low Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.500" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_rf_low_alarm_clear:
    name: RXU RF Low Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.501" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}    
  rxu_ul_over_power_alarm_set:
    name: RXU Ul Over Power Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.502" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_ul_over_power_alarm_clear:
    name: RXU Ul Over Power Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.503" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}  
  rxu_service_off_alarm_set:
    name: RXU Service Off Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.504" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_service_off_alarm_clear:
    name: RXU Service Off Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.505" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_over_temperature_alarm_set:
    name: RXU Over Temperature Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.508" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_over_temperature_alarm_clear:
    name: RXU Over Temperature Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.509" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_antenna_disconnect_alarm_set:
    name: RXU Antenna Disconnect Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.510" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_antenna_disconnect_alarm_clear:
    name: RXU Antenna Disconnect Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.511" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_synth_unlock_alarm_set:
    name: RXU Synth Unlock Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.512" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_synth_unlock_alarm_clear:
    name: RXU Synth Unlock Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.513" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_dl_synth_unlock_alarm_set:
    name: RXU Dl Synth Unlock Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.514" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_dl_synth_unlock_alarm_clear:
    name: RXU Dl Synth Unlock Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.515" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_ul_synth_unlock_alarm_set:
    name: RXU Ul Synth Unlock Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.516" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_ul_synth_unlock_alarm_clear:
    name: RXU Ul Synth Unlock Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.519" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_tdd_sync_loss_alarm_set:
    name: RXU Tdd Sync Loss Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.518" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_tdd_sync_loss_alarm_clear:
    name: RXU Tdd Sync Loss Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.519" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_67_power_fail_alarm_set:
    name: RXU 67 Power Fail Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.550" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_67_power_fail_alarm_clear:
    name: RXU 67 Power Fail Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.551" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_67_hw_fail_alarm_set:
    name: RXU 67 Hw Fail Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.552" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_67_hw_fail_alarm_clear:
    name: RXU 67 Hw Fail Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.553" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_67_over_temperature_alarm_set:
    name: RXU 67 Over Temperature Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.554" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_67_over_temperature_alarm_clear:
    name: RXU 67 Over Temperature Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.555" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_67_dl_out_pwr_low_alarm_set:
    name: RXU 67 Dl Out PWR Low Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.560" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_67_dl_out_pwr_low_alarm_clear:
    name: RXU 67 Dl Out PWR Low Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.561" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_67_ul_in_pwr_high_alarm_set:
    name: RXU 67 Ul in Pwr High Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.562" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_67_ul_in_pwr_high_alarm_clear:
    name: RXU 67 Ul in Pwr High Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.563" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_67_service_off_alarm_set:
    name: RXU 67 Service Off Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.564" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  rxu_67_service_off_alarm_clear:
    name: RXU 67 Service Off Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.565" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_rf_low_power_alarm_set:
    name: MRU Rf Low Power Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.900" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_rf_low_power_alarm_clear:
    name: MRU Rf Low Power Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.901" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_ul_over_power_alarm_set:
    name: MRU Ul Over Power Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.902" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_ul_over_power_alarm_clear:
    name: MRU Ul Over Power Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.903" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_service_off_alarm_set:
    name: MRU Service Off Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.904" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_service_off_alarm_clear:
    name: MRU Service Off Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.905" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_over_temperature_alarm_set:
    name: MRU Over Temperature Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.906" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_over_temperature_alarm_clear:
    name: MRU Over Temperature Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.907" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_fam_velo_city_alarm_set:
    name: MRU Fam Velo City Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.910" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_fam_velo_city_alarm_clear:
    name: MRU Fam Velo City Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.911" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_vswr_alarm_set:
    name: MRU Vswr Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.912" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_vswr_alarm_clear:
    name: MRU Vswr Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.913" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_module_shutdown_alarm_set:
    name: MRU Module Shutdown Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.914" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_module_shutdown_alarm_clear:
    name: MRU Module Shutdown Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.915" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_module_permanent_shutdown_alarm_set:
    name: MRU Module Permanent Shutdown Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.916" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_module_permanent_shutdown_alarm_clear:
    name: MRU Module Permanent Shutdown Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.917" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_module_over_temperature_alarm_set:
    name: MRU Module Over Temperature Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.918" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_module_over_temperature_alarm_clear:
    name: MRU Module Over Temperature Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.919" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_module_out_of_slot_alarm_set:
    name: MRU Module Out of Slot Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.920" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_module_out_of_slot_alarm_clear:
    name: MRU Module Out of Slot Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.921" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_door_open_alarm_set:
    name: MRU Door Open Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.922" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_door_open_alarm_clear:
    name: MRU Door Open Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.923" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_over_temperature_when_door_open_alarm_set:
    name: MRU Over Temperature When Door Open Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.924" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_over_temperature_when_door_open_alarm_clear:
    name: MRU Over Temperature When Door Open Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.925" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_power_supply_alarm_set:
    name: MRU Power Supply Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.926" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_power_supply_alarm_clear:
    name: MRU Power Supply Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.927" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_low_optic_alarm_set:
    name: MRU Low Optic Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.928" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_low_optic_alarm_clear:
    name: MRU Low Optic Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.929" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_optm_over_temperature_alarm_set:
    name: MRU Optm Over Temperature Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.930" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_optm_over_temperature_alarm_clear:
    name: MRU Optm Over Temperature Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.931" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_cabinet_door_alarm_set:
    name: MRU Cabinet Door Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.932" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_cabinet_door_alarm_clear:
    name: MRU Cabinet Door Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.933" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_heat_exchanger_failure_alarm_set:
    name: MRU Heat Exchanger Failure Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.934" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_heat_exchanger_failure_alarm_clear:
    name: MRU Heat Exchanger Failure Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.935" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_module_over_power_alarm_set:
    name: MRU Module Over Power Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.936" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mru_module_over_power_alarm_clear:
    name: MRU Module Over Power Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.937" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  dim_service_off_alarm_set:
    name: DIM Service Off Set Alarm 
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1000" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  dim_service_off_alarm_clear:
    name: DIM Service Off Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1001" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  dim_over_temperature_alarm_set:
    name: DIM Over Temperature Set Alarm 
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1002" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  dim_over_temperature_alarm_clear:
    name: DIM Over Temperature Clear Alarm 
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1003" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  dim_local_los_port_alarm_set:
    name: DIM Local Los Port Set Alarm 
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1004" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  dim_local_los_port_alarm_clear:
    name: DIM Local Los Port Clear Alarm 
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1005" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  dim_local_lof_port_alarm_set:
    name: DIM Local Lof Port Set Alarm 
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1006" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  dim_local_lof_port_alarm_clear:
    name: DIM Local Lof Port Clear Alarm 
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1007" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  dim_local_rai_port_alarm_set:
    name: DIM Local Rai Port Set Alarm 
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1008" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  dim_local_rai_port_alarm_clear:
    name: DIM Local Rai Port Clear Alarm 
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1009" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  dim_remote_los_port_alarm_set:
    name: DIM Remote Los Port Set Alarm  
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1010" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  dim_remote_los_port_alarm_clear:
    name: DIM Remote Los Port Clear Alarm 
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1011" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  dim_remote_lof_port_alarm_set:
    name: DIM Remote Lof Port Set Alarm  
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1012" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  dim_remote_lof_port_alarm_clear:
    name: DIM Remote Lof Port Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1013" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  dim_AWS_mix_connection_alarm_set:
    name: DIM AWS Mix Connection Set Alarm  
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1014" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  dim_AWS_mix_connection_alarm_clear:
    name: DIM AWS Mix Connection Clear Alarm 
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1015" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  lau_ble_service_off_alarm_set:
    name: LAU BLE Service Off Alarm Set 
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1200" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  lau_ble_service_off_alarm_clear:
    name: LAU BLE Service Off Alarm Clear 
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1201" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  lau_wifi_service_off_alarm_set:
    name: LAU Wifi Service Off Alarm Set 
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1202" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  lau_wifi_service_off_alarm_clear:
    name: LAU Wifi Service Off Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1203" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  lau_over_temperature_alarm_set:
    name: LAU Over Temperature Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1204" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  lau_over_temperature_alarm_clear:
    name: LAU Over Temperature Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1205" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  lau_e911_missing_info_alarm_set:
    name: LAU E911 Missing Info Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1206" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  lau_e911_missing_info_alarm_clear:
    name: LAU E911 Missing Info Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1207" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  och_if_card_com_alarm_set:
    name: OCH If Card Com Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1300" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  och_if_card_com_alarm_clear:
    name: OCH If Card Com Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1301" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  och_optical_adjust_alarm_set:
    name: OCH Optical Adjust Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1302" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  och_optical_adjust_alarm_clear:
    name: OCH Optical Adjust Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1303" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  och_optical_link_failed_alarm_set:
    name: OCH Optical Link Failed Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1304" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  och_optical_link_failed_alarm_clear:
    name: OCH Optical Link Failed Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1305" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  och_mismatch_alarm_set:
    name: OCH Mismatch Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1306" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  och_mismatch_alarm_clear:
    name: OCH Mismatch Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1307" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_over_temperature_alarm_set:
    name: GX Over Temperature Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1400" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_over_temperature_alarm_clear:
    name: GX Over Temperature Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1401" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_open_door_alarm_set:
    name: GX Open Door Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1402" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_open_door_alarm_clear:
    name: GX Open Door Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1403" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_optical_alarm_alarm_set:
    name: GX Optical Alarm Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1404" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_optical_alarm_alarm_clear:
    name: GX Optical Alarm Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1405" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_fans_faulty_alarm_set:
    name: GX Fans FaULty Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1406" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_fans_faulty_alarm_clear:
    name: GX Fans FaULty Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1407" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_dl_pa_alarm_set:
    name: GX DL PA Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1408" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_dl_pa_alarm_clear:
    name: GX DL PA Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1409" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_dl_low_alarm_set:
    name: GX DL Low Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1410" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_dl_low_alarm_clear:
    name: GX DL Low Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1411" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_dl_high_alarm_set:
    name: GX DL High Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1412" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_dl_high_alarm_clear:
    name: GX DL High Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1413" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_alc_fail_alarm_set:
    name: GX ALC Fail Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1414" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_alc_fail_alarm_clear:
    name: GX ALC Fail Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1415" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_vswr_alarm_set:
    name: GX VSWR Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1416" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_vswr_alarm_clear:
    name: GX VSWR Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1417" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_service_off_alarm_set:
    name: GX Service Off Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1418" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_service_off_alarm_clear:
    name: GX Service Off Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1419" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_adjustment_fault_alarm_set:
    name: GX Adjustment Fault Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1420" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_adjustment_fault_alarm_clear:
    name: GX Adjustment Fault Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1421" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_ul_lna_alarm_set:
    name: GX UL LNA Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1422" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_ul_lna_alarm_clear:
    name: GX UL LNA Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1423" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_external_alarm_1_alarm_set:
    name: GX External Alarm 1 Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1424" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_external_alarm_1_alarm_clear:
    name: GX External Alarm 1 Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1425" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_external_alarm_2_alarm_set:
    name: GX External Alarm 2 Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1426" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_external_alarm_2_alarm_clear:
    name: GX External Alarm 2 Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1427" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_external_alarm_3_alarm_set:
    name: GX External Alarm 3 Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1428" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_external_alarm_3_alarm_clear:
    name: GX External Alarm 3 Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1429" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_external_alarm_4_alarm_set:
    name: GX External Alarm 4 Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1430" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_external_alarm_4_alarm_clear:
    name: GX External Alarm 4 Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1431" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_if_lo_unlocked_alarm_set:
    name: GX If Lo Unlocked Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1432" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_if_lo_unlocked_alarm_clear:
    name: GX If Lo Unlocked Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1433" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_pilot_low_alarm_set:
    name: GX Pilot Low Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1434" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_pilot_low_alarm_clear:
    name: GX Pilot Low Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1435" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_tsync_alarm_set:
    name: GX Tsync Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1436" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  gx_tsync_alarm_clear:
    name: GX Pilot Low Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1437" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_over_temperature_alarm_set:
    name: MXU Over Temperature Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1500" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_over_temperature_alarm_clear:
    name: MXU Over Temperature Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1501" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_synthesizer_clock_alarm_set:
    name: MXU Synthesizer Clock Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1502" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_synthesizer_clock_alarm_clear:
    name: MXU Synthesizer Clock Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1503" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_syn_closs_alarm_set:
    name: MXU Syn Closs Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1504" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_syn_closs_alarm_clear:
    name:  MXU Syn Closs Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1505" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_rf_connectivity_alarm_set:
    name: MXU RF Connectivity Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1506" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_rf_connectivity_alarm_clear:
    name:  MXU RF Connectivity Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1507" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_dl_out_pwr_low_alarm_set:
    name: MXU DL Out Pwr Low Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1508" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_dl_out_pwr_low_alarm_clear:
    name:  MXU DL Out Pwr Low Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1509" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_ul_in_pwr_high_alarm_set:
    name: MXU UL in PWR High Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1510" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_ul_in_pwr_high_alarm_clear:
    name:  MXU UL in PWR High Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1511" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_service_off_alarm_set:
    name: MXU Service Off Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1512" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_service_off_alarm_clear:
    name:  MXU Service Off Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1513" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_pa_vswr_alarm_set:
    name: MXU PA VSWR Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1514" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_pa_vswr_alarm_clear:
    name:  MXU PA VSWR Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1515" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_pa_shut_down_alarm_set:
    name: MXU PA Shut Down Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1516" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_pa_shut_down_alarm_clear:
    name:  MXU PA Shut Down Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1517" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_pa_permanent_shut_down_alarm_set:
    name: MXU PA Permanent Shut Down Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1518" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_pa_permanent_shut_down_alarm_clear:
    name:  MXU PA Permanent Shut Down Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1519" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_pa_over_temperature_alarm_set:
    name: MXU PA Over Temperature Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1520" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_pa_over_temperature_alarm_clear:
    name:  MXU PA Over Temperature Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1521" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_pa_over_power_alarm_set:
    name: MXU PA Over Power Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1522" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_pa_over_power_alarm_clear:
    name:  MXU PA Over Power Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1523" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_power_supply_alarm_set:
    name: MXU Power Supply Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1524" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_power_supply_alarm_clear:
    name:  MXU Power Supply Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1525" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_dl_synthesize_run_locked_alarm_set:
    name: MXU DL Synthesize Run Locked Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1526" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_dl_synthesize_run_locked_alarm_clear:
    name:  MXU DL Synthesize Run Locked Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1527" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_ul_synthesizer_unlocked_alarm_set:
    name: MXU UL Synthesizer Unlocked Alarm Set
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1528" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  mxu_ul_synthesizer_unlocked_alarm_clear:
    name:  MXU UL Synthesizer Unlocked Alarm Clear
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.1529" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "3"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  site_alarm_connectivity_alarm_set:
    name: Site Connectivity Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.706" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "11"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  site_alarm_connectivity_alarm_clear:
    name: Site Connectivity Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.707" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "11"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  site_adjust_fault_alarm_set:
    name: Site Adjust Fault Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.700" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "11"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  site_adjust_fault_alarm_clear:
    name: Site Adjust Fault Clear Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.701" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "11"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  site_release_mismatch_alarm_set:
    name: Site Release Mismatch Set Alarm
    attributes:
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.704" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "11"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'set'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
  site_release_mismatch_alarm_clear:
    name: Site Release Mismatch Clear Alarm
    attributes:
    
      dataEngine: '%{engines.snmp_trap}'
      selector:
        type: snmpTrap
        expression:
          - '"${resources.globals.oids.maTraps}.705" == "variable_by_oid(snmpTrapOID).value"'
          - '"variable_by_oid(${resources.globals.oids.trapDeviceType}).value" == "11"' #
          - '"variable_by_oid(${resources.globals.oids.trapChassisIndex}).value" == "${type.topology.cInx}"' #any interger NO 0 to 4
          - '"variable_by_oid(${resources.globals.oids.trapSlotIndex).value" == "${type.topology.sInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapPortIndex}).value" == "${type.topology.pInx}"'
          - '"variable_by_oid(${resources.globals.oids.trapRemoteIndex).value" == "${type.topology.rInx}"'
      extractor:
          transform: 'clear'
    properties:
      readWrite: R
      read:
        type: String
      write:
        type: ""
        properties: {}
resources:
  auths:
    upgraded-snmp:
      snmp:
        version: v2
        credentials:
          readCommunity: '${resources.globals.reg.readCommunity}'
          writeCommunity: ''
    upgraded-http:
      http:
        httpUri: false
        actions:
          login:
            dataEngine: '%{engines.upgraded-http}'
            dataSource: '%{resources.http.requests.login}'
            selector:
              type: cookie
              expression: CMACOOKIE
            dataSink: '%{resources.globals.auth.sessionID}'
          logout:
            dataEngine: '%{engines.upgraded-http}'
            dataSource: '%{resources.http.requests.logout}'
            selector:
              type: static
              expression: ""
            dataSink: '%{resources.globals.auth.sessionID}'
  functions:
    timestamp:
      filters:
        1: timestamp
  mappers:
    some_alarm_severity:
      keyType: String
      valueType: String
      map:
        clear: Normal
        set: Critical
  globals:
    oids:
      maEvents: .1.3.6.1.4.1.15921.20.1.1
      maTraps: .1.3.6.1.4.1.15921.20.1.2
      trapDeviceType: ${resources.globals.oid.maTraps}.6 # REVIEW(bg): Added the trap* OID for a better readability in the matcher
      trapChassisIndex: ${resources.globals.oid.maTraps}.8
      trapSlotIndex: ${resources.globals.oid.maTraps}.9
      trapPortIndex: ${resources.globals.oid.maTraps}.10
      trapRemoteIndex: ${resources.globals.oid.maTraps}.11
      trapSeverity: ${resources.globals.oid.maTraps}.16
    reg:
      group: ${registration.vault.properties.group}
      groupID: ${registration.vault.properties.group_id}
      ip: ${registration.form.properties.ip}
      password: ${registration.vault.properties.password}
      port: ${registration.form.properties.port}
      url: ${registration.form.properties.scheme}://${registration.form.properties.ip}:${registration.form.properties.port}
      username: ${registration.vault.properties.username}
  http:
    requests:
      get_acm:
        method: POST
        uri: ${resources.globals.reg.url}/ma/CMACgi
        requestContentType: gzip, deflate, br
        responseContentType: text/html
        query:
          page: cgi/IFSAPI.html
        cookies:
          CMACOOKIE: ${resources.globals.auth.sessionID}
          CMAOFFLINE: ""
          firstLogin: ""
        body:
          json: '{"m_strChannel":"FAST","m_strDest":"SITE","m_bExI":false,"m_strOpCode":"GetSiteData","m_nIndexes":["${topology.discovery.flatten.cInx}","${topology.discovery.flatten.pInx}","${topology.discovery.flatten.sInx}","${topology.discovery.flatten.rInx}"],"m_strStackID":"","m_strType":"Na"}{"m_strChannel":"FAST","m_strDest":"MODULE","m_bExI":false,"m_strOpCode":"GetAcmData","m_nIndexes":["${topology.discovery.flatten.cInx}","${topology.discovery.flatten.pInx}","${topology.discovery.flatten.sInx}","${topology.discovery.flatten.rInx}"],"m_strStackID":"","m_strType":"Na","m_clsInput":{}}'
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      get_data:
        uri: ${resources.globals.reg.url}/ma/CMACgi
        requestContentType: gzip
        responseContentType: text/html
        query:
          _: '!{template.filters.functions.timestamp}'
          cInx: ${topology.discovery.flatten.cInx}
          d: '!{template.filters.functions.timestamp}'
          device: ${topology.discovery.flatten.deviceNumber}
          pInx: ${topology.discovery.flatten.pInx}
          page: cgi/device_data.html
          rInx: ${topology.discovery.flatten.rInx}
          rackInx: undefined
          sInx: ${topology.discovery.flatten.sInx}
        cookies:
          CMACOOKIE: ${resources.globals.auth.cmaCookie}
          firstLogin: "null"
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: status-code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: status-code
              match: "500"
      get_fmm:
        method: POST
        uri: ${resources.globals.reg.url}/ma/CMACgi
        requestContentType: gzip, deflate, br
        responseContentType: text/html
        query:
          page: cgi/IFSAPI.html
        cookies:
          CMACOOKIE: ${resources.globals.auth.sessionID}
          CMAOFFLINE: ""
          firstLogin: ""
        body:
          json: '{"m_strChannel":"FAST","m_strDest":"MODULE","m_bExI":false,"m_strOpCode":"GetFmmData","m_nIndexes":["${topology.discovery.flatten.cInx}","${topology.discovery.flatten.pInx}","${topology.discovery.flatten.sInx}","${topology.discovery.flatten.rInx}"],"m_strStackID":"","m_strType":"Na","m_clsInput":{}}'
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      get_hcm:
        method: POST
        uri: ${resources.globals.reg.url}/ma/CMACgi
        requestContentType: gzip, deflate, br
        responseContentType: text/html
        query:
          page: cgi/IFSAPI.html
        cookies:
          CMACOOKIE: ${resources.globals.auth.sessionID}
          CMAOFFLINE: ""
          firstLogin: ""
        body:
          json: '{"m_strChannel":"SLOW","m_strDest":"MULTISTACK","m_bExI":false,"m_strOpCode":"GET_MS_DATA","m_nIndexes":["${topology.discovery.flatten.cInx}","${topology.discovery.flatten.pInx}","${topology.discovery.flatten.sInx}","${topology.discovery.flatten.rInx}"],"m_strStackID":"","m_strType":"Na","m_clsInput":{}}'
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      get_oim:
        method: POST
        uri: ${resources.globals.reg.url}/ma/CMACgi
        requestContentType: gzip, deflate, br
        responseContentType: text/html
        query:
          page: cgi/IFSAPI.html
        cookies:
          CMACOOKIE: ${resources.globals.auth.sessionID}
          CMAOFFLINE: ""
          firstLogin: ""
        body:
          json: '{"m_strChannel":"FAST","m_strDest":"MODULE","m_bExI":false,"m_strOpCode":"GetOimData","m_nIndexes":["${topology.discovery.flatten.cInx}","${topology.discovery.flatten.pInx}","${topology.discovery.flatten.sInx}","${topology.discovery.flatten.rInx}"],"m_strStackID":"","m_strType":"Na","m_clsInput":{}}'
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      get_rau:
        method: POST
        uri: ${resources.globals.reg.url}/ma/CMACgi
        requestContentType: gzip, deflate, br
        responseContentType: text/html
        query:
          page: cgi/IFSAPI.html
        cookies:
          CMACOOKIE: ${resources.globals.auth.sessionID}
          CMAOFFLINE: ""
          firstLogin: ""
        body:
          json: '{"m_strChannel":"FAST","m_strDest":"MODULE","m_bExI":false,"m_strOpCode":"GetRauData","m_nIndexes":["${topology.discovery.flatten.cInx}","${topology.discovery.flatten.pInx}","${topology.discovery.flatten.sInx}","${topology.discovery.flatten.rInx}"],"m_strStackID":"","m_strType":"Na","m_clsInput":{}}'
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      get_rim:
        method: POST
        uri: ${resources.globals.reg.url}/ma/CMACgi
        requestContentType: gzip, deflate, br
        responseContentType: text/html
        query:
          page: cgi/IFSAPI.html
        cookies:
          CMACOOKIE: ${resources.globals.auth.sessionID}
          CMAOFFLINE: ""
          firstLogin: ""
        body:
          json: '{"m_strChannel":"FAST","m_strDest":"MODULE","m_bExI":false,"m_strOpCode":"GetRimData","m_nIndexes":["${topology.discovery.flatten.cInx}","${topology.discovery.flatten.pInx}","${topology.discovery.flatten.sInx}","${topology.discovery.flatten.rInx}"],"m_strStackID":"","m_strType":"Na","m_clsInput":{}}'
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      get_site:
        method: POST
        uri: ${resources.globals.reg.url}/ma/CMACgi
        requestContentType: gzip, deflate, br
        responseContentType: text/html
        query:
          page: cgi/IFSAPI.html
        cookies:
          CMACOOKIE: ${resources.globals.auth.sessionID}
          CMAOFFLINE: ""
          firstLogin: ""
        body:
          json: '{"m_strChannel":"FAST","m_strDest":"SITE","m_bExI":false,"m_strOpCode":"GetSiteData","m_nIndexes":["${topology.discovery.flatten.cInx}","${topology.discovery.flatten.pInx}","${topology.discovery.flatten.sInx}","${topology.discovery.flatten.rInx}"],"m_strStackID":"","m_strType":"Na"}'
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: Status-Code
              match: ^(?!200)
      get_tree:
        uri: ${resources.globals.reg.url}/ma/CMACgi
        responseContentType: application/json
        query:
          _: '!{template.filters.functions.timestamp}'
          Random: "868"
          StackID: ""
          page: cgi/gettree.html
        cookies:
          CMACOOKIE: ${resources.globals.auth.sessionID}
          firstLogin: "null"
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: status-code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: status-code
              match: "500"
      login:
        method: POST
        uri: ${resources.globals.reg.url}/ma/CMACgi
        requestContentType: application/x-www-form-urlencoded
        responseContentType: text/html
        query:
          page: login
        body:
          goto: Sign In
          group_select: ${resources.globals.reg.groupID}
          password: ${resources.globals.reg.password}
          userName: ${resources.globals.reg.username}
        responses:
          success:
            - dataSource: '%{response.cookie}'
              expression: CMACOOKIE
              match: ^.+$
          failure:
            - dataSource: '%{response.cookie}'
              expression: CMAADMIN_ERR
              match: ^.+$
      logout:
        method: POST
        uri: ${resources.globals.reg.url}/ma/CMACgi
        requestContentType: gzip, deflate, br
        responseContentType: text/html
        query:
          page: cgi/logoff.html
        body:
          logOut: "1"
        responses:
          success:
            - dataSource: '%{response.header}'
              expression: status-code
              match: "200"
          failure:
            - dataSource: '%{response.header}'
              expression: status-code
              match: "500"
